{"version":3,"file":"index-27290b98.js","sources":["../../node_modules/react/cjs/react-jsx-runtime.production.min.js","../../node_modules/react/jsx-runtime.js","../../node_modules/react-dom/client.js","../../src/context/AuthContext.tsx","../../src/components/auth/ProtectedRoute.tsx","../../src/components/auth/AdminRoute.tsx","../../src/components/auth/UserRoute.tsx","../../src/components/layout/Sidebar.tsx","../../src/components/layout/Layout.tsx","../../src/components/ui/Button.tsx","../../src/pages/Login.tsx","../../src/components/ui/Card.tsx","../../src/pages/Profile.tsx","../../src/pages/admin/Dashboard.tsx","../../src/hooks/useApi.ts","../../src/pages/admin/Tasks.tsx","../../src/pages/admin/Users.tsx","../../src/pages/admin/CreateTask.tsx","../../src/lib/cognitoAdmin.ts","../../src/pages/admin/CreateUser.tsx","../../src/pages/admin/UserDetails.tsx","../../src/pages/admin/ResetPassword.tsx","../../src/pages/user/Dashboard.tsx","../../src/pages/user/Tasks.tsx","../../src/pages/user/TaskDetail.tsx","../../src/App.tsx","../../src/index.tsx"],"sourcesContent":["/**\n * @license React\n * react-jsx-runtime.production.min.js\n *\n * Copyright (c) Facebook, Inc. and its affiliates.\n *\n * This source code is licensed under the MIT license found in the\n * LICENSE file in the root directory of this source tree.\n */\n'use strict';var f=require(\"react\"),k=Symbol.for(\"react.element\"),l=Symbol.for(\"react.fragment\"),m=Object.prototype.hasOwnProperty,n=f.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED.ReactCurrentOwner,p={key:!0,ref:!0,__self:!0,__source:!0};\nfunction q(c,a,g){var b,d={},e=null,h=null;void 0!==g&&(e=\"\"+g);void 0!==a.key&&(e=\"\"+a.key);void 0!==a.ref&&(h=a.ref);for(b in a)m.call(a,b)&&!p.hasOwnProperty(b)&&(d[b]=a[b]);if(c&&c.defaultProps)for(b in a=c.defaultProps,a)void 0===d[b]&&(d[b]=a[b]);return{$$typeof:k,type:c,key:e,ref:h,props:d,_owner:n.current}}exports.Fragment=l;exports.jsx=q;exports.jsxs=q;\n","'use strict';\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./cjs/react-jsx-runtime.production.min.js');\n} else {\n  module.exports = require('./cjs/react-jsx-runtime.development.js');\n}\n","'use strict';\n\nvar m = require('react-dom');\nif (process.env.NODE_ENV === 'production') {\n  exports.createRoot = m.createRoot;\n  exports.hydrateRoot = m.hydrateRoot;\n} else {\n  var i = m.__SECRET_INTERNALS_DO_NOT_USE_OR_YOU_WILL_BE_FIRED;\n  exports.createRoot = function(c, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.createRoot(c, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n  exports.hydrateRoot = function(c, h, o) {\n    i.usingClientEntryPoint = true;\n    try {\n      return m.hydrateRoot(c, h, o);\n    } finally {\n      i.usingClientEntryPoint = false;\n    }\n  };\n}\n","import { createContext, useContext, useState, useEffect, ReactNode } from 'react'\nimport { Auth } from 'aws-amplify'\n\ninterface AuthContextType {\n  isAuthenticated: boolean\n  isLoading: boolean\n  user: any | null\n  signIn: (username: string, password: string) => Promise<any>\n  signOut: () => Promise<void>\n}\n\nconst AuthContext = createContext<AuthContextType | undefined>(undefined)\n\nexport function AuthProvider({ children }: { children: ReactNode }) {\n  const [isAuthenticated, setIsAuthenticated] = useState(false)\n  const [isLoading, setIsLoading] = useState(true)\n  const [user, setUser] = useState<any | null>(null)\n\n  useEffect(() => {\n    checkAuthState()\n  }, [])\n\n  async function checkAuthState() {\n    try {\n      const currentUser = await Auth.currentAuthenticatedUser()\n      setUser(currentUser)\n      setIsAuthenticated(true)\n    } catch (error) {\n      setUser(null)\n      setIsAuthenticated(false)\n    } finally {\n      setIsLoading(false)\n    }\n  }\n\n  async function signIn(username: string, password: string) {\n    try {\n      const user = await Auth.signIn(username, password)\n      setUser(user)\n      setIsAuthenticated(true)\n      return user\n    } catch (error) {\n      throw error\n    }\n  }\n\n  async function signOut() {\n    try {\n      await Auth.signOut()\n      setUser(null)\n      setIsAuthenticated(false)\n    } catch (error) {\n      console.error('Error signing out:', error)\n    }\n  }\n\n  const value = {\n    isAuthenticated,\n    isLoading,\n    user,\n    signIn,\n    signOut,\n  }\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>\n}\n\nexport function useAuth() {\n  const context = useContext(AuthContext)\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider')\n  }\n  return context\n}","import { Navigate } from 'react-router-dom'\nimport { useAuth } from '../../context/AuthContext'\nimport { ReactNode } from 'react'\n\ninterface ProtectedRouteProps {\n  children: ReactNode\n}\n\nconst ProtectedRoute = ({ children }: ProtectedRouteProps) => {\n  const { isAuthenticated, isLoading } = useAuth()\n\n  if (isLoading) {\n    return <div className=\"flex items-center justify-center h-screen\">Loading...</div>\n  }\n\n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" replace />\n  }\n\n  return <>{children}</>\n}\n\nexport default ProtectedRoute","import { Navigate, Outlet } from 'react-router-dom'\nimport { useAuth } from '../../context/AuthContext'\n\nconst AdminRoute = () => {\n  const { isAuthenticated, isLoading, user } = useAuth()\n  \n  // Check if user is in the admin group\n  const isAdmin = user?.signInUserSession?.accessToken?.payload['cognito:groups']?.includes('admin')\n  \n  if (isLoading) {\n    return <div className=\"flex justify-center items-center h-screen\">Loading...</div>\n  }\n  \n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" replace />\n  }\n  \n  if (!isAdmin) {\n    return <Navigate to=\"/dashboard\" replace />\n  }\n  \n  return <Outlet />\n}\n\nexport default AdminRoute","import { Navigate, Outlet } from 'react-router-dom'\nimport { useAuth } from '../../context/AuthContext'\n\nconst UserRoute = () => {\n  const { isAuthenticated, isLoading } = useAuth()\n  \n  if (isLoading) {\n    return <div className=\"flex justify-center items-center h-screen\">Loading...</div>\n  }\n  \n  if (!isAuthenticated) {\n    return <Navigate to=\"/login\" replace />\n  }\n  \n  return <Outlet />\n}\n\nexport default UserRoute","import { NavLink } from 'react-router-dom'\nimport { useAuth } from '../../context/AuthContext'\n\nconst Sidebar = () => {\n  const { signOut, user } = useAuth()\n  \n  // Check if user is in the admin group\n  const isAdmin = user?.signInUserSession?.accessToken?.payload['cognito:groups']?.includes('admin')\n\n  return (\n    <div className=\"w-64 bg-white shadow-md h-full\">\n      <div className=\"p-6\">\n        <h1 className=\"text-2xl font-bold text-blue-600\">TaskBuddy</h1>\n      </div>\n      \n      <nav className=\"mt-6\">\n        <ul>\n          <li>\n            <NavLink \n              to=\"/\" \n              className={({ isActive }) => \n                `flex items-center px-6 py-3 hover:bg-blue-50 ${isActive ? 'bg-blue-100 text-blue-700' : 'text-gray-700'}`\n              }\n            >\n              Dashboard\n            </NavLink>\n          </li>\n          \n          {isAdmin && (\n            <>\n              <li>\n                <NavLink \n                  to=\"/admin/tasks\" \n                  className={({ isActive }) => \n                    `flex items-center px-6 py-3 hover:bg-blue-50 ${isActive ? 'bg-blue-100 text-blue-700' : 'text-gray-700'}`\n                  }\n                >\n                  Manage Tasks\n                </NavLink>\n              </li>\n              <li>\n                <NavLink \n                  to=\"/admin/users\" \n                  className={({ isActive }) => \n                    `flex items-center px-6 py-3 hover:bg-blue-50 ${isActive ? 'bg-blue-100 text-blue-700' : 'text-gray-700'}`\n                  }\n                >\n                  Manage Users\n                </NavLink>\n              </li>\n            </>\n          )}\n          \n          {!isAdmin && (\n            <>\n              <li>\n                <NavLink \n                  to=\"/dashboard\" \n                  className={({ isActive }) => \n                    `flex items-center px-6 py-3 hover:bg-blue-50 ${isActive ? 'bg-blue-100 text-blue-700' : 'text-gray-700'}`\n                  }\n                >\n                  Dashboard\n                </NavLink>\n              </li>\n              <li>\n                <NavLink \n                  to=\"/tasks\" \n                  className={({ isActive }) => \n                    `flex items-center px-6 py-3 hover:bg-blue-50 ${isActive ? 'bg-blue-100 text-blue-700' : 'text-gray-700'}`\n                  }\n                >\n                  My Tasks\n                </NavLink>\n              </li>\n            </>\n          )}\n          \n          <li>\n            <NavLink \n              to=\"/profile\" \n              className={({ isActive }) => \n                `flex items-center px-6 py-3 hover:bg-blue-50 ${isActive ? 'bg-blue-100 text-blue-700' : 'text-gray-700'}`\n              }\n            >\n              Profile\n            </NavLink>\n          </li>\n          \n          <li>\n            <button \n              onClick={signOut}\n              className=\"w-full text-left px-6 py-3 text-gray-700 hover:bg-red-50 hover:text-red-700\"\n            >\n              Sign Out\n            </button>\n          </li>\n        </ul>\n      </nav>\n    </div>\n  )\n}\n\nexport default Sidebar","import { Outlet } from 'react-router-dom'\nimport Sidebar from './Sidebar'\n\nconst Layout = () => {\n  return (\n    <div className=\"flex h-screen bg-gray-100\">\n      <Sidebar />\n      <main className=\"flex-1 overflow-auto p-6\">\n        <Outlet />\n      </main>\n    </div>\n  )\n}\n\nexport default Layout","import { ButtonHTMLAttributes, ReactNode } from 'react'\n\ninterface ButtonProps extends ButtonHTMLAttributes<HTMLButtonElement> {\n  children: ReactNode\n  variant?: 'primary' | 'secondary' | 'danger' | 'success'\n  size?: 'sm' | 'md' | 'lg'\n  isLoading?: boolean\n  fullWidth?: boolean\n}\n\nconst Button = ({\n  children,\n  variant = 'primary',\n  size = 'md',\n  isLoading = false,\n  fullWidth = false,\n  className = '',\n  disabled,\n  ...props\n}: ButtonProps) => {\n  const baseStyles = 'inline-flex items-center justify-center rounded-md font-medium transition-colors focus:outline-none focus:ring-2 focus:ring-offset-2'\n  \n  const variantStyles = {\n    primary: 'bg-blue-600 text-white hover:bg-blue-700 focus:ring-blue-500',\n    secondary: 'bg-gray-200 text-gray-900 hover:bg-gray-300 focus:ring-gray-500',\n    danger: 'bg-red-600 text-white hover:bg-red-700 focus:ring-red-500',\n    success: 'bg-green-600 text-white hover:bg-green-700 focus:ring-green-500',\n  }\n  \n  const sizeStyles = {\n    sm: 'text-sm px-3 py-1',\n    md: 'text-base px-4 py-2',\n    lg: 'text-lg px-6 py-3',\n  }\n  \n  const widthStyle = fullWidth ? 'w-full' : ''\n  \n  return (\n    <button\n      className={`${baseStyles} ${variantStyles[variant]} ${sizeStyles[size]} ${widthStyle} ${\n        disabled || isLoading ? 'opacity-70 cursor-not-allowed' : ''\n      } ${className}`}\n      disabled={disabled || isLoading}\n      {...props}\n    >\n      {isLoading ? (\n        <>\n          <svg className=\"animate-spin -ml-1 mr-2 h-4 w-4 text-current\" xmlns=\"http://www.w3.org/2000/svg\" fill=\"none\" viewBox=\"0 0 24 24\">\n            <circle className=\"opacity-25\" cx=\"12\" cy=\"12\" r=\"10\" stroke=\"currentColor\" strokeWidth=\"4\"></circle>\n            <path className=\"opacity-75\" fill=\"currentColor\" d=\"M4 12a8 8 0 018-8V0C5.373 0 0 5.373 0 12h4zm2 5.291A7.962 7.962 0 014 12H0c0 3.042 1.135 5.824 3 7.938l3-2.647z\"></path>\n          </svg>\n          Loading...\n        </>\n      ) : (\n        children\n      )}\n    </button>\n  )\n}\n\nexport default Button","import { useState, FormEvent } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport { useAuth } from '../context/AuthContext'\nimport Button from '../components/ui/Button'\n\nconst Login = () => {\n  const [username, setUsername] = useState('')\n  const [password, setPassword] = useState('')\n  const [error, setError] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  \n  const { signIn } = useAuth()\n  const navigate = useNavigate()\n  \n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault()\n    setError('')\n    setIsLoading(true)\n    \n    try {\n      await signIn(username, password)\n      navigate('/')\n    } catch (err: any) {\n      setError(err.message || 'Failed to sign in')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n  \n  return (\n    <div className=\"min-h-screen flex items-center justify-center bg-gray-50 py-12 px-4 sm:px-6 lg:px-8\">\n      <div className=\"max-w-md w-full space-y-8\">\n        <div>\n          <h2 className=\"mt-6 text-center text-3xl font-extrabold text-gray-900\">\n            Sign in to TaskBuddy\n          </h2>\n        </div>\n        \n        <form className=\"mt-8 space-y-6\" onSubmit={handleSubmit}>\n          {error && (\n            <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded\">\n              {error}\n            </div>\n          )}\n          \n          <div className=\"rounded-md shadow-sm -space-y-px\">\n            <div>\n              <label htmlFor=\"username\" className=\"sr-only\">\n                Username\n              </label>\n              <input\n                id=\"username\"\n                name=\"username\"\n                type=\"text\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-t-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Username\"\n                value={username}\n                onChange={(e) => setUsername(e.target.value)}\n              />\n            </div>\n            <div>\n              <label htmlFor=\"password\" className=\"sr-only\">\n                Password\n              </label>\n              <input\n                id=\"password\"\n                name=\"password\"\n                type=\"password\"\n                required\n                className=\"appearance-none rounded-none relative block w-full px-3 py-2 border border-gray-300 placeholder-gray-500 text-gray-900 rounded-b-md focus:outline-none focus:ring-blue-500 focus:border-blue-500 focus:z-10 sm:text-sm\"\n                placeholder=\"Password\"\n                value={password}\n                onChange={(e) => setPassword(e.target.value)}\n              />\n            </div>\n          </div>\n          \n          <div>\n            <Button\n              type=\"submit\"\n              fullWidth\n              isLoading={isLoading}\n            >\n              Sign in\n            </Button>\n          </div>\n        </form>\n      </div>\n    </div>\n  )\n}\n\nexport default Login","import { ReactNode } from 'react'\n\ninterface CardProps {\n  children: ReactNode\n  className?: string\n  title?: string\n}\n\nconst Card = ({ children, className = '', title }: CardProps) => {\n  return (\n    <div className={`bg-white rounded-lg shadow-md overflow-hidden ${className}`}>\n      {title && (\n        <div className=\"border-b border-gray-200 px-6 py-4\">\n          <h3 className=\"text-lg font-medium text-gray-900\">{title}</h3>\n        </div>\n      )}\n      <div className=\"px-6 py-4\">{children}</div>\n    </div>\n  )\n}\n\nexport default Card","import { useState, useEffect } from 'react'\nimport { useAuth } from '../context/AuthContext'\nimport Card from '../components/ui/Card'\n\nconst Profile = () => {\n  const { user } = useAuth()\n  const [userAttributes, setUserAttributes] = useState<Record<string, string>>({})\n\n  useEffect(() => {\n    if (user) {\n      setUserAttributes(user.attributes || {})\n    }\n  }, [user])\n\n  return (\n    <div className=\"max-w-3xl mx-auto\">\n      <h1 className=\"text-2xl font-bold mb-6\">User Profile</h1>\n      \n      <Card className=\"mb-6\">\n        <div className=\"space-y-4\">\n          <div>\n            <h3 className=\"text-sm font-medium text-gray-500\">Username</h3>\n            <p className=\"mt-1 text-lg\">{user?.username || 'N/A'}</p>\n          </div>\n          \n          <div>\n            <h3 className=\"text-sm font-medium text-gray-500\">Email</h3>\n            <p className=\"mt-1 text-lg\">{userAttributes.email || 'N/A'}</p>\n          </div>\n          \n          {userAttributes.name && (\n            <div>\n              <h3 className=\"text-sm font-medium text-gray-500\">Name</h3>\n              <p className=\"mt-1 text-lg\">{userAttributes.name}</p>\n            </div>\n          )}\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default Profile","import Card from '../../components/ui/Card'\nimport Button from '../../components/ui/Button'\nimport { Link } from 'react-router-dom'\n\nconst Dashboard = () => {\n  return (\n    <div>\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-bold\">Dashboard</h1>\n        <div className=\"flex space-x-2\">\n          <Link to=\"/admin/users/create\">\n            <Button variant=\"secondary\">Create User</Button>\n          </Link>\n          <Link to=\"/admin/tasks/create\">\n            <Button>Create Task</Button>\n          </Link>\n        </div>\n      </div>\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-3 gap-6\">\n        <Card title=\"Tasks\">\n          <div className=\"text-3xl font-bold\">0</div>\n          <p className=\"text-gray-500\">Total tasks</p>\n        </Card>\n        \n        <Card title=\"Users\">\n          <div className=\"text-3xl font-bold\">0</div>\n          <p className=\"text-gray-500\">Registered users</p>\n        </Card>\n        \n        <Card title=\"Completed\">\n          <div className=\"text-3xl font-bold\">0</div>\n          <p className=\"text-gray-500\">Completed tasks</p>\n        </Card>\n      </div>\n    </div>\n  )\n}\n\nexport default Dashboard","import { API } from 'aws-amplify'\nimport { useState } from 'react'\n\ninterface ApiOptions {\n  path: string\n  method?: 'GET' | 'POST' | 'PUT' | 'DELETE'\n  body?: any\n  headers?: Record<string, string>\n}\n\nexport function useApi() {\n  const [loading, setLoading] = useState(false)\n  const [error, setError] = useState<Error | null>(null)\n\n  const apiName = 'taskbuddyApi'\n\n  async function callApi<T>({ path, method = 'GET', body, headers = {} }: ApiOptions): Promise<T> {\n    setLoading(true)\n    setError(null)\n    \n    try {\n      // Get JWT token for authorization\n      const session = await API.Auth.currentSession();\n      const token = session.getIdToken().getJwtToken();\n      \n      // Use Amplify's API directly for better integration with AWS services\n      const options: any = {\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${token}`,\n          ...headers,\n        },\n      }\n      \n      if (body) {\n        options.body = JSON.stringify(body)\n      }\n      \n      console.log('API Request:', { path, method, options });\n      const response = await API.get(apiName, path, options);\n      console.log('API Response:', response);\n      return response as T;\n    } catch (err) {\n      console.error('API Error:', err)\n      setError(err instanceof Error ? err : new Error('Unknown error occurred'))\n      throw err\n    } finally {\n      setLoading(false)\n    }\n  }\n\n  return {\n    callApi,\n    loading,\n    error,\n  }\n}","import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from '../../components/ui/Button'\nimport Card from '../../components/ui/Card'\nimport { useApi } from '../../hooks/useApi'\n\ninterface Task {\n  taskId: string\n  title: string\n  status: string\n  priority: string\n  createdAt: string\n  description?: string\n}\n\nconst Tasks = () => {\n  const [tasks, setTasks] = useState<Task[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState('')\n  const { callApi } = useApi()\n  \n  useEffect(() => {\n    const fetchTasks = async () => {\n      try {\n        // Use admin-specific endpoint for fetching all tasks\n        const data = await callApi<Task[]>({ \n          path: '/admin/tasks',\n          headers: {\n            'x-admin-access': 'true'\n          }\n        })\n        setTasks(Array.isArray(data) ? data : [])\n      } catch (err) {\n        console.error('Error fetching tasks:', err)\n        setError('Failed to load tasks')\n      } finally {\n        setLoading(false)\n      }\n    }\n    \n    fetchTasks()\n  }, [])\n  \n  return (\n    <div>\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-bold\">Manage Tasks</h1>\n        <Link to=\"/admin/tasks/create\">\n          <Button>Create Task</Button>\n        </Link>\n      </div>\n      \n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-4\">\n          {error}\n        </div>\n      )}\n      \n      <Card>\n        {loading ? (\n          <div className=\"text-center py-8\">\n            <p className=\"text-gray-500\">Loading tasks...</p>\n          </div>\n        ) : tasks.length > 0 ? (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Title</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Priority</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Created</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {tasks.map((task) => (\n                  <tr key={task.taskId}>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">{task.title}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full \n                        ${task.status === 'completed' ? 'bg-green-100 text-green-800' : \n                          task.status === 'in_progress' ? 'bg-blue-100 text-blue-800' : \n                          'bg-yellow-100 text-yellow-800'}`}>\n                        {task.status}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">{task.priority}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">{new Date(task.createdAt).toLocaleDateString()}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div className=\"text-center py-8\">\n            <p className=\"text-gray-500\">No tasks available</p>\n          </div>\n        )}\n      </Card>\n    </div>\n  )\n}\n\nexport default Tasks","import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport Button from '../../components/ui/Button'\nimport Card from '../../components/ui/Card'\nimport { useApi } from '../../hooks/useApi'\n\ninterface User {\n  userId: string\n  email: string\n  name: string\n  role: string\n  isActive: boolean\n  createdAt: string\n  department?: string\n}\n\nconst Users = () => {\n  const [users, setUsers] = useState<User[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState('')\n  const { callApi } = useApi()\n  \n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const data = await callApi<User[]>({ \n          path: '/admin/users',\n          headers: {\n            'x-admin-access': 'true'\n          }\n        })\n        setUsers(Array.isArray(data) ? data : [])\n      } catch (err) {\n        console.error('Error fetching users:', err)\n        setError('Failed to load users')\n      } finally {\n        setLoading(false)\n      }\n    }\n    \n    fetchUsers()\n  }, [])\n  \n  return (\n    <div>\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-bold\">Manage Users</h1>\n        <Link to=\"/admin/users/create\">\n          <Button>Create User</Button>\n        </Link>\n      </div>\n      \n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-4\">\n          {error}\n        </div>\n      )}\n      \n      <Card>\n        {loading ? (\n          <div className=\"text-center py-8\">\n            <p className=\"text-gray-500\">Loading users...</p>\n          </div>\n        ) : users.length > 0 ? (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Name</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Email</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Role</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Department</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {users.map((user) => (\n                  <tr key={user.userId}>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <Link to={`/admin/users/${user.userId}`} className=\"text-blue-600 hover:text-blue-900\">\n                        {user.name}\n                      </Link>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">{user.email}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">{user.role}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full \n                        ${user.isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>\n                        {user.isActive ? 'Active' : 'Inactive'}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">{user.department || '-'}</td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div className=\"text-center py-8\">\n            <p className=\"text-gray-500\">No users available</p>\n          </div>\n        )}\n      </Card>\n    </div>\n  )\n}\n\nexport default Users","import { useState, useEffect, FormEvent } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport Button from '../../components/ui/Button'\nimport Card from '../../components/ui/Card'\nimport { useApi } from '../../hooks/useApi'\n\ninterface User {\n  userId: string\n  email: string\n  name: string\n  role: string\n}\n\nconst CreateTask = () => {\n  const [title, setTitle] = useState('')\n  const [description, setDescription] = useState('')\n  const [priority, setPriority] = useState('medium')\n  const [assignedTo, setAssignedTo] = useState('')\n  const [dueDate, setDueDate] = useState('')\n  const [users, setUsers] = useState<User[]>([])\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState('')\n  const navigate = useNavigate()\n  const { callApi } = useApi()\n  \n  useEffect(() => {\n    const fetchUsers = async () => {\n      try {\n        const data = await callApi<User[]>({ path: '/users' })\n        // Filter to only show regular users, not admins\n        const regularUsers = data.filter(user => user.role === 'user')\n        setUsers(regularUsers)\n      } catch (err) {\n        console.error('Error fetching users:', err)\n      }\n    }\n    \n    fetchUsers()\n  }, [])\n  \n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault()\n    setIsLoading(true)\n    setError('')\n    \n    try {\n      await callApi({\n        path: '/tasks',\n        method: 'POST',\n        body: {\n          title,\n          description,\n          priority,\n          assignedTo,\n          dueDate: dueDate || undefined,\n          sendNotification: true // Enable email notification\n        }\n      })\n      navigate('/admin/tasks')\n    } catch (err) {\n      console.error('Error creating task:', err)\n      setError('Failed to create task. Please try again.')\n    } finally {\n      setIsLoading(false)\n    }\n  }\n  \n  return (\n    <div>\n      <h1 className=\"text-2xl font-bold mb-6\">Create Task</h1>\n      \n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-4\">\n          {error}\n        </div>\n      )}\n      \n      <Card>\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-4\">\n            <label htmlFor=\"title\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Title\n            </label>\n            <input\n              type=\"text\"\n              id=\"title\"\n              value={title}\n              onChange={(e) => setTitle(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n              required\n            />\n          </div>\n          \n          <div className=\"mb-4\">\n            <label htmlFor=\"description\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Description\n            </label>\n            <textarea\n              id=\"description\"\n              value={description}\n              onChange={(e) => setDescription(e.target.value)}\n              rows={4}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n              required\n            />\n          </div>\n          \n          <div className=\"mb-4\">\n            <label htmlFor=\"priority\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Priority\n            </label>\n            <select\n              id=\"priority\"\n              value={priority}\n              onChange={(e) => setPriority(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n              required\n            >\n              <option value=\"low\">Low</option>\n              <option value=\"medium\">Medium</option>\n              <option value=\"high\">High</option>\n            </select>\n          </div>\n          \n          <div className=\"mb-4\">\n            <label htmlFor=\"assignedTo\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Assign To\n            </label>\n            <select\n              id=\"assignedTo\"\n              value={assignedTo}\n              onChange={(e) => setAssignedTo(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n            >\n              <option value=\"\">Select a user</option>\n              {users.map(user => (\n                <option key={user.userId} value={user.userId}>\n                  {user.name} ({user.email})\n                </option>\n              ))}\n            </select>\n          </div>\n          \n          <div className=\"mb-4\">\n            <label htmlFor=\"dueDate\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Due Date (Optional)\n            </label>\n            <input\n              type=\"date\"\n              id=\"dueDate\"\n              value={dueDate}\n              onChange={(e) => setDueDate(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n              min={new Date().toISOString().split('T')[0]} // Prevent past dates\n            />\n          </div>\n          \n          <div className=\"flex justify-end\">\n            <Button type=\"button\" variant=\"secondary\" className=\"mr-2\" onClick={() => navigate('/admin/tasks')}>\n              Cancel\n            </Button>\n            <Button type=\"submit\" isLoading={isLoading}>\n              Create Task\n            </Button>\n          </div>\n        </form>\n      </Card>\n    </div>\n  )\n}\n\nexport default CreateTask","// This file is for local development only\n// In production, user management should be handled by backend APIs\n\nimport { Auth } from 'aws-amplify';\n\n// Helper functions for Cognito admin operations\nexport const cognitoAdmin = {\n  // Create a new user\n  async createUser(userData: {\n    username: string;\n    email: string;\n    name: string;\n    role?: string;\n  }) {\n    try {\n      // In production, this should call a backend API\n      const response = await fetch(`${import.meta.env.VITE_API_ENDPOINT}/admin/users`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${(await Auth.currentSession()).getIdToken().getJwtToken()}`\n        },\n        body: JSON.stringify({\n          email: userData.email,\n          name: userData.name,\n          role: userData.role || 'user'\n        })\n      });\n      \n      if (!response.ok) {\n        throw new Error(`API error: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      return {\n        user: { Username: userData.username },\n        tempPassword: data.tempPassword || 'Check email for password'\n      };\n    } catch (error) {\n      console.error('Error creating user:', error);\n      throw error;\n    }\n  },\n  \n  // Reset a user's password\n  async resetUserPassword(username: string) {\n    try {\n      // In production, this should call a backend API\n      const response = await fetch(`${import.meta.env.VITE_API_ENDPOINT}/admin/users/${username}/reset-password`, {\n        method: 'POST',\n        headers: {\n          'Content-Type': 'application/json',\n          'Authorization': `Bearer ${(await Auth.currentSession()).getIdToken().getJwtToken()}`\n        }\n      });\n      \n      if (!response.ok) {\n        throw new Error(`API error: ${response.status}`);\n      }\n      \n      const data = await response.json();\n      return { tempPassword: data.tempPassword || 'Check email for password' };\n    } catch (error) {\n      console.error('Error resetting password:', error);\n      throw error;\n    }\n  }\n};\n\nexport default cognitoAdmin;","import { useState, FormEvent } from 'react'\nimport { useNavigate } from 'react-router-dom'\nimport Button from '../../components/ui/Button'\nimport Card from '../../components/ui/Card'\nimport { useApi } from '../../hooks/useApi'\nimport cognitoAdmin from '../../lib/cognitoAdmin'\n\nconst CreateUser = () => {\n  const [name, setName] = useState('')\n  const [email, setEmail] = useState('')\n  const [role, setRole] = useState('user')\n  const [department, setDepartment] = useState('')\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState('')\n  const [success, setSuccess] = useState('')\n  const navigate = useNavigate()\n  const { callApi } = useApi()\n  \n  const handleSubmit = async (e: FormEvent) => {\n    e.preventDefault()\n    setIsLoading(true)\n    setError('')\n    setSuccess('')\n    \n    try {\n      console.log('Creating user:', { name, email });\n      \n      // Create user directly in Cognito using our helper\n      const result = await cognitoAdmin.createUser({\n        username: email,\n        email: email,\n        name: name\n      });\n      \n      console.log('User created:', result);\n      \n      setSuccess(`User created successfully! Temporary password: ${result.tempPassword}`);\n      \n      // Clear form\n      setName('')\n      setEmail('')\n      setRole('user')\n      setDepartment('')\n      \n      // Navigate after a delay to show success message\n      setTimeout(() => {\n        navigate('/admin/users')\n      }, 5000)\n    } catch (err) {\n      console.error('Error creating user:', err)\n      // Show more detailed error if available\n      if (err instanceof Error) {\n        setError(`Failed to create user: ${err.message}`)\n      } else {\n        setError('Failed to create user. Please try again.')\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }\n  \n  return (\n    <div>\n      <h1 className=\"text-2xl font-bold mb-6\">Create User</h1>\n      \n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-4\">\n          {error}\n        </div>\n      )}\n      \n      {success && (\n        <div className=\"bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded mb-4\">\n          {success}\n        </div>\n      )}\n      \n      <Card>\n        <form onSubmit={handleSubmit}>\n          <div className=\"mb-4\">\n            <label htmlFor=\"name\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Full Name\n            </label>\n            <input\n              type=\"text\"\n              id=\"name\"\n              value={name}\n              onChange={(e) => setName(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n              required\n            />\n          </div>\n          \n          <div className=\"mb-4\">\n            <label htmlFor=\"email\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Email Address\n            </label>\n            <input\n              type=\"email\"\n              id=\"email\"\n              value={email}\n              onChange={(e) => setEmail(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n              required\n            />\n          </div>\n          \n          <div className=\"mb-4\">\n            <label htmlFor=\"role\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Role\n            </label>\n            <select\n              id=\"role\"\n              value={role}\n              onChange={(e) => setRole(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n              required\n            >\n              <option value=\"user\">User</option>\n              <option value=\"admin\">Admin</option>\n            </select>\n          </div>\n          \n          <div className=\"mb-4\">\n            <label htmlFor=\"department\" className=\"block text-sm font-medium text-gray-700 mb-1\">\n              Department (Optional)\n            </label>\n            <input\n              type=\"text\"\n              id=\"department\"\n              value={department}\n              onChange={(e) => setDepartment(e.target.value)}\n              className=\"w-full px-3 py-2 border border-gray-300 rounded-md focus:outline-none focus:ring-blue-500 focus:border-blue-500\"\n            />\n          </div>\n          \n\n          \n          <div className=\"flex justify-end\">\n            <Button type=\"button\" variant=\"secondary\" className=\"mr-2\" onClick={() => navigate('/admin/users')}>\n              Cancel\n            </Button>\n            <Button type=\"submit\" isLoading={isLoading}>\n              Create User\n            </Button>\n          </div>\n        </form>\n      </Card>\n    </div>\n  )\n}\n\nexport default CreateUser","import { useState, useEffect } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport Button from '../../components/ui/Button'\nimport Card from '../../components/ui/Card'\nimport { useApi } from '../../hooks/useApi'\n\ninterface User {\n  userId: string\n  email: string\n  name: string\n  role: string\n  isActive: boolean\n  createdAt: string\n  department?: string\n  phoneNumber?: string\n}\n\nconst UserDetails = () => {\n  const { id } = useParams<{ id: string }>()\n  const [user, setUser] = useState<User | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState('')\n  const { callApi } = useApi()\n  const navigate = useNavigate()\n  \n  useEffect(() => {\n    const fetchUser = async () => {\n      try {\n        const data = await callApi<User>({ \n          path: `/admin/users/${id}`,\n          headers: {\n            'x-admin-access': 'true'\n          }\n        })\n        setUser(data)\n      } catch (err) {\n        console.error('Error fetching user details:', err)\n        setError('Failed to load user details')\n      } finally {\n        setLoading(false)\n      }\n    }\n    \n    if (id) {\n      fetchUser()\n    }\n  }, [id])\n  \n  const resetPassword = () => {\n    if (user) {\n      navigate(`/admin/users/${user.email}/reset-password`)\n    }\n  }\n  \n  if (loading) {\n    return (\n      <div className=\"text-center py-8\">\n        <p className=\"text-gray-500\">Loading user details...</p>\n      </div>\n    )\n  }\n  \n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded\">\n        {error}\n      </div>\n    )\n  }\n  \n  if (!user) {\n    return (\n      <div className=\"text-center py-8\">\n        <p className=\"text-gray-500\">User not found</p>\n        <Button onClick={() => navigate('/admin/users')} className=\"mt-4\">\n          Back to Users\n        </Button>\n      </div>\n    )\n  }\n  \n  return (\n    <div>\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-bold\">User Details</h1>\n        <Button onClick={() => navigate('/admin/users')} variant=\"secondary\">\n          Back to Users\n        </Button>\n      </div>\n      \n      <Card>\n        <div className=\"space-y-6\">\n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900\">Basic Information</h3>\n            <div className=\"mt-2 grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2\">\n              <div>\n                <dt className=\"text-sm font-medium text-gray-500\">Name</dt>\n                <dd className=\"mt-1 text-sm text-gray-900\">{user.name}</dd>\n              </div>\n              <div>\n                <dt className=\"text-sm font-medium text-gray-500\">Email</dt>\n                <dd className=\"mt-1 text-sm text-gray-900\">{user.email}</dd>\n              </div>\n              <div>\n                <dt className=\"text-sm font-medium text-gray-500\">Role</dt>\n                <dd className=\"mt-1 text-sm text-gray-900\">{user.role}</dd>\n              </div>\n              <div>\n                <dt className=\"text-sm font-medium text-gray-500\">Status</dt>\n                <dd className=\"mt-1\">\n                  <span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full \n                    ${user.isActive ? 'bg-green-100 text-green-800' : 'bg-red-100 text-red-800'}`}>\n                    {user.isActive ? 'Active' : 'Inactive'}\n                  </span>\n                </dd>\n              </div>\n              {user.department && (\n                <div>\n                  <dt className=\"text-sm font-medium text-gray-500\">Department</dt>\n                  <dd className=\"mt-1 text-sm text-gray-900\">{user.department}</dd>\n                </div>\n              )}\n              {user.phoneNumber && (\n                <div>\n                  <dt className=\"text-sm font-medium text-gray-500\">Phone Number</dt>\n                  <dd className=\"mt-1 text-sm text-gray-900\">{user.phoneNumber}</dd>\n                </div>\n              )}\n              <div>\n                <dt className=\"text-sm font-medium text-gray-500\">Created</dt>\n                <dd className=\"mt-1 text-sm text-gray-900\">\n                  {new Date(user.createdAt).toLocaleDateString()}\n                </dd>\n              </div>\n            </div>\n          </div>\n          \n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900\">Actions</h3>\n            <div className=\"mt-2 flex space-x-3\">\n              <Button onClick={resetPassword}>\n                Reset Password\n              </Button>\n            </div>\n          </div>\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default UserDetails","import { useState } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport Button from '../../components/ui/Button'\nimport Card from '../../components/ui/Card'\nimport cognitoAdmin from '../../lib/cognitoAdmin'\n\nconst ResetPassword = () => {\n  const { username } = useParams<{ username: string }>()\n  const [isLoading, setIsLoading] = useState(false)\n  const [error, setError] = useState('')\n  const [tempPassword, setTempPassword] = useState('')\n  const navigate = useNavigate()\n  \n  const handleResetPassword = async () => {\n    if (!username) return\n    \n    setIsLoading(true)\n    setError('')\n    setTempPassword('')\n    \n    try {\n      const result = await cognitoAdmin.resetUserPassword(username)\n      setTempPassword(result.tempPassword)\n    } catch (err) {\n      console.error('Error resetting password:', err)\n      if (err instanceof Error) {\n        setError(`Failed to reset password: ${err.message}`)\n      } else {\n        setError('Failed to reset password. Please try again.')\n      }\n    } finally {\n      setIsLoading(false)\n    }\n  }\n  \n  return (\n    <div>\n      <h1 className=\"text-2xl font-bold mb-6\">Reset User Password</h1>\n      \n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-4\">\n          {error}\n        </div>\n      )}\n      \n      <Card>\n        <div className=\"mb-6\">\n          <p className=\"text-gray-700\">\n            You are about to reset the password for user: <strong>{username}</strong>\n          </p>\n          <p className=\"text-gray-500 mt-2\">\n            This will generate a new temporary password that the user will need to change on their next login.\n          </p>\n        </div>\n        \n        {tempPassword ? (\n          <div className=\"mb-6\">\n            <div className=\"bg-green-50 border border-green-200 text-green-700 px-4 py-3 rounded\">\n              <p className=\"font-bold\">Password reset successfully!</p>\n              <p className=\"mt-2\">Temporary password: <strong>{tempPassword}</strong></p>\n              <p className=\"text-sm mt-2\">Make sure to share this password with the user securely.</p>\n            </div>\n          </div>\n        ) : null}\n        \n        <div className=\"flex justify-end space-x-3\">\n          <Button \n            type=\"button\" \n            variant=\"secondary\" \n            onClick={() => navigate(-1)}\n          >\n            Back\n          </Button>\n          \n          {!tempPassword && (\n            <Button \n              type=\"button\" \n              onClick={handleResetPassword}\n              isLoading={isLoading}\n            >\n              Reset Password\n            </Button>\n          )}\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default ResetPassword","import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport Card from '../../components/ui/Card'\nimport { useApi } from '../../hooks/useApi'\nimport { useAuth } from '../../context/AuthContext'\n\ninterface TaskStats {\n  total: number\n  completed: number\n  inProgress: number\n  pending: number\n}\n\nconst UserDashboard = () => {\n  const [stats, setStats] = useState<TaskStats>({\n    total: 0,\n    completed: 0,\n    inProgress: 0,\n    pending: 0\n  })\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState('')\n  const { callApi } = useApi()\n  const { user } = useAuth()\n  \n  useEffect(() => {\n    const fetchTaskStats = async () => {\n      try {\n        const data = await callApi<TaskStats>({ \n          path: '/tasks/stats',\n          headers: {\n            'x-user-id': user?.username || ''\n          }\n        })\n        setStats(data)\n      } catch (err) {\n        console.error('Error fetching task stats:', err)\n        setError('Failed to load task statistics')\n      } finally {\n        setLoading(false)\n      }\n    }\n    \n    if (user) {\n      fetchTaskStats()\n    }\n  }, [user])\n  \n  return (\n    <div>\n      <h1 className=\"text-2xl font-bold mb-6\">My Dashboard</h1>\n      \n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-4\">\n          {error}\n        </div>\n      )}\n      \n      <div className=\"grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6\">\n        <Card title=\"Total Tasks\">\n          <div className=\"text-3xl font-bold\">{stats.total}</div>\n          <p className=\"text-gray-500\">Assigned to you</p>\n        </Card>\n        \n        <Card title=\"Pending\">\n          <div className=\"text-3xl font-bold text-yellow-500\">{stats.pending}</div>\n          <p className=\"text-gray-500\">Not started</p>\n        </Card>\n        \n        <Card title=\"In Progress\">\n          <div className=\"text-3xl font-bold text-blue-500\">{stats.inProgress}</div>\n          <p className=\"text-gray-500\">Currently working</p>\n        </Card>\n        \n        <Card title=\"Completed\">\n          <div className=\"text-3xl font-bold text-green-500\">{stats.completed}</div>\n          <p className=\"text-gray-500\">Finished tasks</p>\n        </Card>\n      </div>\n      \n      <div className=\"mt-8\">\n        <Link \n          to=\"/tasks\" \n          className=\"text-blue-600 hover:text-blue-800 font-medium\"\n        >\n          View all my tasks →\n        </Link>\n      </div>\n    </div>\n  )\n}\n\nexport default UserDashboard","import { useState, useEffect } from 'react'\nimport { Link } from 'react-router-dom'\nimport Card from '../../components/ui/Card'\nimport { useApi } from '../../hooks/useApi'\nimport { useAuth } from '../../context/AuthContext'\n\ninterface Task {\n  taskId: string\n  title: string\n  status: string\n  priority: string\n  createdAt: string\n  description?: string\n  assignedTo?: string\n}\n\nconst UserTasks = () => {\n  const [tasks, setTasks] = useState<Task[]>([])\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState('')\n  const { callApi } = useApi()\n  const { user } = useAuth()\n  \n  useEffect(() => {\n    const fetchUserTasks = async () => {\n      try {\n        const data = await callApi<Task[]>({ \n          path: '/tasks/assigned',\n          headers: {\n            'x-user-id': user?.username || ''\n          }\n        })\n        setTasks(Array.isArray(data) ? data : [])\n      } catch (err) {\n        console.error('Error fetching tasks:', err)\n        setError('Failed to load your tasks')\n      } finally {\n        setLoading(false)\n      }\n    }\n    \n    if (user) {\n      fetchUserTasks()\n    }\n  }, [user])\n  \n  return (\n    <div>\n      <h1 className=\"text-2xl font-bold mb-6\">My Tasks</h1>\n      \n      {error && (\n        <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded mb-4\">\n          {error}\n        </div>\n      )}\n      \n      <Card>\n        {loading ? (\n          <div className=\"text-center py-8\">\n            <p className=\"text-gray-500\">Loading tasks...</p>\n          </div>\n        ) : tasks.length > 0 ? (\n          <div className=\"overflow-x-auto\">\n            <table className=\"min-w-full divide-y divide-gray-200\">\n              <thead className=\"bg-gray-50\">\n                <tr>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Title</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Status</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Priority</th>\n                  <th className=\"px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider\">Actions</th>\n                </tr>\n              </thead>\n              <tbody className=\"bg-white divide-y divide-gray-200\">\n                {tasks.map((task) => (\n                  <tr key={task.taskId}>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">{task.title}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <span className={`px-2 inline-flex text-xs leading-5 font-semibold rounded-full \n                        ${task.status === 'completed' ? 'bg-green-100 text-green-800' : \n                          task.status === 'in_progress' ? 'bg-blue-100 text-blue-800' : \n                          'bg-yellow-100 text-yellow-800'}`}>\n                        {task.status}\n                      </span>\n                    </td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">{task.priority}</td>\n                    <td className=\"px-6 py-4 whitespace-nowrap\">\n                      <Link \n                        to={`/tasks/${task.taskId}`}\n                        className=\"text-blue-600 hover:text-blue-900\"\n                      >\n                        View Details\n                      </Link>\n                    </td>\n                  </tr>\n                ))}\n              </tbody>\n            </table>\n          </div>\n        ) : (\n          <div className=\"text-center py-8\">\n            <p className=\"text-gray-500\">No tasks assigned to you</p>\n          </div>\n        )}\n      </Card>\n    </div>\n  )\n}\n\nexport default UserTasks","import { useState, useEffect } from 'react'\nimport { useParams, useNavigate } from 'react-router-dom'\nimport Card from '../../components/ui/Card'\nimport Button from '../../components/ui/Button'\nimport { useApi } from '../../hooks/useApi'\n\ninterface Task {\n  taskId: string\n  title: string\n  description?: string\n  status: string\n  priority: string\n  createdAt: string\n  assignedBy?: string\n  dueDate?: string\n}\n\nconst TaskDetail = () => {\n  const { id } = useParams<{ id: string }>()\n  const [task, setTask] = useState<Task | null>(null)\n  const [loading, setLoading] = useState(true)\n  const [error, setError] = useState('')\n  const [updating, setUpdating] = useState(false)\n  const { callApi } = useApi()\n  const navigate = useNavigate()\n  \n  useEffect(() => {\n    const fetchTask = async () => {\n      try {\n        const data = await callApi<Task>({ path: `/tasks/${id}` })\n        setTask(data)\n      } catch (err) {\n        console.error('Error fetching task details:', err)\n        setError('Failed to load task details')\n      } finally {\n        setLoading(false)\n      }\n    }\n    \n    if (id) {\n      fetchTask()\n    }\n  }, [id])\n  \n  const updateTaskStatus = async (newStatus: string) => {\n    if (!task) return\n    \n    setUpdating(true)\n    try {\n      const updatedTask = await callApi<Task>({\n        path: `/tasks/${id}/status`,\n        method: 'PUT',\n        body: { status: newStatus }\n      })\n      setTask(updatedTask)\n    } catch (err) {\n      console.error('Error updating task status:', err)\n      setError('Failed to update task status')\n    } finally {\n      setUpdating(false)\n    }\n  }\n  \n  if (loading) {\n    return (\n      <div className=\"text-center py-8\">\n        <p className=\"text-gray-500\">Loading task details...</p>\n      </div>\n    )\n  }\n  \n  if (error) {\n    return (\n      <div className=\"bg-red-50 border border-red-200 text-red-700 px-4 py-3 rounded\">\n        {error}\n      </div>\n    )\n  }\n  \n  if (!task) {\n    return (\n      <div className=\"text-center py-8\">\n        <p className=\"text-gray-500\">Task not found</p>\n        <Button onClick={() => navigate('/tasks')} className=\"mt-4\">\n          Back to Tasks\n        </Button>\n      </div>\n    )\n  }\n  \n  return (\n    <div>\n      <div className=\"flex justify-between items-center mb-6\">\n        <h1 className=\"text-2xl font-bold\">{task.title}</h1>\n        <Button onClick={() => navigate('/tasks')} variant=\"secondary\">\n          Back to Tasks\n        </Button>\n      </div>\n      \n      <Card>\n        <div className=\"space-y-6\">\n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900\">Task Details</h3>\n            <div className=\"mt-2 grid grid-cols-1 gap-x-4 gap-y-6 sm:grid-cols-2\">\n              <div>\n                <dt className=\"text-sm font-medium text-gray-500\">Status</dt>\n                <dd className=\"mt-1\">\n                  <span className={`px-2 py-1 inline-flex text-xs leading-5 font-semibold rounded-full \n                    ${task.status === 'completed' ? 'bg-green-100 text-green-800' : \n                      task.status === 'in_progress' ? 'bg-blue-100 text-blue-800' : \n                      'bg-yellow-100 text-yellow-800'}`}>\n                    {task.status}\n                  </span>\n                </dd>\n              </div>\n              <div>\n                <dt className=\"text-sm font-medium text-gray-500\">Priority</dt>\n                <dd className=\"mt-1 text-sm text-gray-900\">{task.priority}</dd>\n              </div>\n              {task.dueDate && (\n                <div>\n                  <dt className=\"text-sm font-medium text-gray-500\">Due Date</dt>\n                  <dd className=\"mt-1 text-sm text-gray-900\">\n                    {new Date(task.dueDate).toLocaleDateString()}\n                  </dd>\n                </div>\n              )}\n              <div>\n                <dt className=\"text-sm font-medium text-gray-500\">Created</dt>\n                <dd className=\"mt-1 text-sm text-gray-900\">\n                  {new Date(task.createdAt).toLocaleDateString()}\n                </dd>\n              </div>\n            </div>\n          </div>\n          \n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900\">Description</h3>\n            <div className=\"mt-2 prose prose-sm text-gray-500\">\n              {task.description || 'No description provided'}\n            </div>\n          </div>\n          \n          <div>\n            <h3 className=\"text-lg font-medium text-gray-900\">Actions</h3>\n            <div className=\"mt-2 flex space-x-3\">\n              {task.status === 'pending' && (\n                <Button \n                  onClick={() => updateTaskStatus('in_progress')} \n                  isLoading={updating}\n                  disabled={updating}\n                >\n                  Start Task\n                </Button>\n              )}\n              \n              {task.status === 'in_progress' && (\n                <Button \n                  onClick={() => updateTaskStatus('completed')} \n                  isLoading={updating}\n                  disabled={updating}\n                >\n                  Complete Task\n                </Button>\n              )}\n            </div>\n          </div>\n        </div>\n      </Card>\n    </div>\n  )\n}\n\nexport default TaskDetail","import { BrowserRouter as Router, Routes, Route } from 'react-router-dom'\nimport { AuthProvider } from './context/AuthContext'\nimport ProtectedRoute from './components/auth/ProtectedRoute'\nimport AdminRoute from './components/auth/AdminRoute'\nimport UserRoute from './components/auth/UserRoute'\nimport Layout from './components/layout/Layout'\n\n// Pages\nimport Login from './pages/Login'\nimport Profile from './pages/Profile'\nimport Dashboard from './pages/admin/Dashboard'\nimport Tasks from './pages/admin/Tasks'\nimport Users from './pages/admin/Users'\nimport CreateTask from './pages/admin/CreateTask'\nimport CreateUser from './pages/admin/CreateUser'\nimport UserDetails from './pages/admin/UserDetails'\nimport ResetPassword from './pages/admin/ResetPassword'\nimport UserDashboard from './pages/user/Dashboard'\nimport UserTasks from './pages/user/Tasks'\nimport TaskDetail from './pages/user/TaskDetail'\n\n// Import NotFound directly here to avoid path resolution issues\nconst NotFound = () => (\n  <div className=\"min-h-screen flex flex-col items-center justify-center bg-gray-50\">\n    <h1 className=\"text-4xl font-bold text-gray-900 mb-4\">404</h1>\n    <p className=\"text-xl text-gray-600 mb-8\">Page not found</p>\n    <a href=\"/\" className=\"px-4 py-2 bg-blue-600 text-white rounded hover:bg-blue-700\">\n      Return to Dashboard\n    </a>\n  </div>\n)\n\nfunction App() {\n  return (\n    <AuthProvider>\n      <Router>\n        <Routes>\n          <Route path=\"/login\" element={<Login />} />\n          \n          {/* Protected routes for all authenticated users */}\n          <Route element={<ProtectedRoute><Layout /></ProtectedRoute>}>\n            <Route path=\"/profile\" element={<Profile />} />\n            \n            {/* Admin routes - only accessible to admin users */}\n            <Route element={<AdminRoute />}>\n              <Route path=\"/\" element={<Dashboard />} />\n              <Route path=\"/admin/tasks\" element={<Tasks />} />\n              <Route path=\"/admin/users\" element={<Users />} />\n              <Route path=\"/admin/tasks/create\" element={<CreateTask />} />\n              <Route path=\"/admin/users/create\" element={<CreateUser />} />\n              <Route path=\"/admin/users/:id\" element={<UserDetails />} />\n              <Route path=\"/admin/users/:username/reset-password\" element={<ResetPassword />} />\n            </Route>\n            \n            {/* User routes - accessible to all authenticated users */}\n            <Route element={<UserRoute />}>\n              <Route path=\"/dashboard\" element={<UserDashboard />} />\n              <Route path=\"/tasks\" element={<UserTasks />} />\n              <Route path=\"/tasks/:id\" element={<TaskDetail />} />\n            </Route>\n          </Route>\n          \n          <Route path=\"*\" element={<NotFound />} />\n        </Routes>\n      </Router>\n    </AuthProvider>\n  )\n}\n\nexport default App","import React from 'react'\nimport ReactDOM from 'react-dom/client'\nimport App from './App'\nimport './index.css'\nimport { Amplify } from 'aws-amplify'\n\n// Configure Amplify\nAmplify.configure({\n  Auth: {\n    region: import.meta.env.VITE_AWS_REGION,\n    userPoolId: import.meta.env.VITE_USER_POOL_ID,\n    userPoolWebClientId: import.meta.env.VITE_USER_POOL_CLIENT_ID,\n    mandatorySignIn: true,\n  },\n  API: {\n    endpoints: [\n      {\n        name: 'taskbuddyApi',\n        endpoint: import.meta.env.VITE_API_ENDPOINT,\n        region: import.meta.env.VITE_AWS_REGION\n      }\n    ]\n  }\n})\n\nReactDOM.createRoot(document.getElementById('root')!).render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n)"],"names":["f","require$$0","k","l","m","n","p","q","c","a","g","b","d","e","h","reactJsxRuntime_production_min","jsxRuntimeModule","client","AuthContext","createContext","AuthProvider","children","isAuthenticated","setIsAuthenticated","useState","isLoading","setIsLoading","user","setUser","useEffect","checkAuthState","currentUser","Auth","signIn","username","password","error","signOut","value","jsx","useAuth","context","useContext","ProtectedRoute","Navigate","AdminRoute","isAdmin","_c","_b","_a","Outlet","UserRoute","Sidebar","jsxs","NavLink","isActive","Fragment","Layout","Button","variant","size","fullWidth","className","disabled","props","baseStyles","variantStyles","sizeStyles","widthStyle","Login","setUsername","setPassword","setError","navigate","useNavigate","handleSubmit","err","Card","title","Profile","userAttributes","setUserAttributes","Dashboard","Link","useApi","loading","setLoading","apiName","callApi","path","method","body","headers","options","API","response","Tasks","tasks","setTasks","data","task","Users","users","setUsers","CreateTask","setTitle","description","setDescription","priority","setPriority","assignedTo","setAssignedTo","dueDate","setDueDate","regularUsers","cognitoAdmin","userData","CreateUser","name","setName","email","setEmail","role","setRole","department","setDepartment","success","setSuccess","result","UserDetails","id","useParams","resetPassword","ResetPassword","tempPassword","setTempPassword","handleResetPassword","UserDashboard","stats","setStats","UserTasks","TaskDetail","setTask","updating","setUpdating","updateTaskStatus","newStatus","updatedTask","NotFound","App","Router","Routes","Route","Amplify","ReactDOM","React"],"mappings":";;;;;;;;GASa,IAAIA,EAAEC,EAAiBC,EAAE,OAAO,IAAI,eAAe,EAAEC,EAAE,OAAO,IAAI,gBAAgB,EAAEC,EAAE,OAAO,UAAU,eAAeC,GAAEL,EAAE,mDAAmD,kBAAkBM,GAAE,CAAC,IAAI,GAAG,IAAI,GAAG,OAAO,GAAG,SAAS,EAAE,EAClP,SAASC,EAAEC,EAAEC,EAAEC,EAAE,CAAC,IAAIC,EAAEC,EAAE,GAAGC,EAAE,KAAKC,EAAE,KAAcJ,IAAT,SAAaG,EAAE,GAAGH,GAAYD,EAAE,MAAX,SAAiBI,EAAE,GAAGJ,EAAE,KAAcA,EAAE,MAAX,SAAiBK,EAAEL,EAAE,KAAK,IAAIE,KAAKF,EAAEL,EAAE,KAAKK,EAAEE,CAAC,GAAG,CAACL,GAAE,eAAeK,CAAC,IAAIC,EAAED,CAAC,EAAEF,EAAEE,CAAC,GAAG,GAAGH,GAAGA,EAAE,aAAa,IAAIG,KAAKF,EAAED,EAAE,aAAaC,EAAWG,EAAED,CAAC,IAAZ,SAAgBC,EAAED,CAAC,EAAEF,EAAEE,CAAC,GAAG,MAAM,CAAC,SAAST,EAAE,KAAKM,EAAE,IAAIK,EAAE,IAAIC,EAAE,MAAMF,EAAE,OAAOP,GAAE,OAAO,CAAC,YAAkBF,EAAaY,EAAA,IAACR,EAAEQ,EAAA,KAAaR,ECPxWS,EAAA,QAAiBf,uBCDfG,EAAIH,EAEYgB,EAAA,WAAGb,EAAE,WACJa,EAAA,YAAGb,EAAE,YCM1B,MAAMc,EAAcC,EAAAA,cAA2C,MAAS,EAExD,SAAAC,GAAa,CAAE,SAAAC,GAAqC,CAClE,KAAM,CAACC,EAAiBC,CAAkB,EAAIC,WAAS,EAAK,EACtD,CAACC,EAAWC,CAAY,EAAIF,WAAS,EAAI,EACzC,CAACG,EAAMC,CAAO,EAAIJ,WAAqB,IAAI,EAEjDK,EAAAA,UAAU,IAAM,CACCC,GACjB,EAAG,CAAE,CAAA,EAEL,eAAeA,GAAiB,CAC1B,GAAA,CACI,MAAAC,EAAc,MAAMC,EAAK,2BAC/BJ,EAAQG,CAAW,EACnBR,EAAmB,EAAI,OACT,CACdK,EAAQ,IAAI,EACZL,EAAmB,EAAK,CAAA,QACxB,CACAG,EAAa,EAAK,CACpB,CACF,CAEe,eAAAO,EAAOC,EAAkBC,EAAkB,CACpD,GAAA,CACF,MAAMR,EAAO,MAAMK,EAAK,OAAOE,EAAUC,CAAQ,EACjD,OAAAP,EAAQD,CAAI,EACZJ,EAAmB,EAAI,EAChBI,QACAS,EAAO,CACR,MAAAA,CACR,CACF,CAEA,eAAeC,GAAU,CACnB,GAAA,CACF,MAAML,EAAK,UACXJ,EAAQ,IAAI,EACZL,EAAmB,EAAK,QACjBa,EAAO,CACN,QAAA,MAAM,qBAAsBA,CAAK,CAC3C,CACF,CAEA,MAAME,EAAQ,CACZ,gBAAAhB,EACA,UAAAG,EACA,KAAAE,EACA,OAAAM,EACA,QAAAI,CAAA,EAGF,OAAQE,EAAAA,IAAArB,EAAY,SAAZ,CAAqB,MAAAoB,EAAe,SAAAjB,CAAS,CAAA,CACvD,CAEO,SAASmB,GAAU,CAClB,MAAAC,EAAUC,aAAWxB,CAAW,EACtC,GAAIuB,IAAY,OACR,MAAA,IAAI,MAAM,6CAA6C,EAExD,OAAAA,CACT,CCjEA,MAAME,GAAiB,CAAC,CAAE,SAAAtB,KAAoC,CAC5D,KAAM,CAAE,gBAAAC,EAAiB,UAAAG,CAAU,EAAIe,EAAQ,EAE/C,OAAIf,EACMc,EAAAA,IAAA,MAAA,CAAI,UAAU,4CAA4C,SAAU,YAAA,CAAA,EAGzEjB,oBAIK,SAAAD,CAAS,CAAA,EAHTkB,EAAAA,IAAAK,EAAA,CAAS,GAAG,SAAS,QAAO,EAAC,CAAA,CAIzC,ECjBMC,GAAa,IAAM,WACvB,KAAM,CAAE,gBAAAvB,EAAiB,UAAAG,EAAW,KAAAE,GAASa,EAAQ,EAG/CM,GAAUC,GAAAC,GAAAC,EAAAtB,GAAA,YAAAA,EAAM,oBAAN,YAAAsB,EAAyB,cAAzB,YAAAD,EAAsC,QAAQ,oBAA9C,YAAAD,EAAiE,SAAS,SAE1F,OAAItB,EACMc,EAAAA,IAAA,MAAA,CAAI,UAAU,4CAA4C,SAAU,YAAA,CAAA,EAGzEjB,EAIAwB,QAIGI,EAAO,CAAA,CAAA,EAHLX,EAAAA,IAAAK,EAAA,CAAS,GAAG,aAAa,QAAO,EAAC,CAAA,EAJjCL,EAAAA,IAAAK,EAAA,CAAS,GAAG,SAAS,QAAO,EAAC,CAAA,CAQzC,ECnBMO,GAAY,IAAM,CACtB,KAAM,CAAE,gBAAA7B,EAAiB,UAAAG,CAAU,EAAIe,EAAQ,EAE/C,OAAIf,EACMc,EAAAA,IAAA,MAAA,CAAI,UAAU,4CAA4C,SAAU,YAAA,CAAA,EAGzEjB,QAIG4B,EAAO,CAAA,CAAA,EAHLX,EAAAA,IAAAK,EAAA,CAAS,GAAG,SAAS,QAAO,EAAC,CAAA,CAIzC,ECZMQ,GAAU,IAAM,WACpB,KAAM,CAAE,QAAAf,EAAS,KAAAV,CAAK,EAAIa,EAAQ,EAG5BM,GAAUC,GAAAC,GAAAC,EAAAtB,GAAA,YAAAA,EAAM,oBAAN,YAAAsB,EAAyB,cAAzB,YAAAD,EAAsC,QAAQ,oBAA9C,YAAAD,EAAiE,SAAS,SAGxF,OAAAM,EAAA,KAAC,MAAI,CAAA,UAAU,iCACb,SAAA,CAACd,EAAAA,IAAA,MAAA,CAAI,UAAU,MACb,SAAAA,EAAA,IAAC,MAAG,UAAU,mCAAmC,qBAAS,CAC5D,CAAA,EAECA,MAAA,MAAA,CAAI,UAAU,OACb,gBAAC,KACC,CAAA,SAAA,CAAAA,MAAC,KACC,CAAA,SAAAA,EAAA,IAACe,EAAA,CACC,GAAG,IACH,UAAW,CAAC,CAAE,SAAAC,KACZ,gDAAgDA,EAAW,4BAA8B,eAAe,GAE3G,SAAA,WAAA,CAAA,EAGH,EAECT,GAEGO,EAAA,KAAAG,WAAA,CAAA,SAAA,CAAAjB,MAAC,KACC,CAAA,SAAAA,EAAA,IAACe,EAAA,CACC,GAAG,eACH,UAAW,CAAC,CAAE,SAAAC,KACZ,gDAAgDA,EAAW,4BAA8B,eAAe,GAE3G,SAAA,cAAA,CAAA,EAGH,QACC,KACC,CAAA,SAAAhB,EAAA,IAACe,EAAA,CACC,GAAG,eACH,UAAW,CAAC,CAAE,SAAAC,KACZ,gDAAgDA,EAAW,4BAA8B,eAAe,GAE3G,SAAA,cAAA,CAAA,EAGH,CAAA,EACF,EAGD,CAACT,GAEEO,EAAAA,KAAAG,EAAA,SAAA,CAAA,SAAA,CAAAjB,MAAC,KACC,CAAA,SAAAA,EAAA,IAACe,EAAA,CACC,GAAG,aACH,UAAW,CAAC,CAAE,SAAAC,KACZ,gDAAgDA,EAAW,4BAA8B,eAAe,GAE3G,SAAA,WAAA,CAAA,EAGH,QACC,KACC,CAAA,SAAAhB,EAAA,IAACe,EAAA,CACC,GAAG,SACH,UAAW,CAAC,CAAE,SAAAC,KACZ,gDAAgDA,EAAW,4BAA8B,eAAe,GAE3G,SAAA,UAAA,CAAA,EAGH,CAAA,EACF,QAGD,KACC,CAAA,SAAAhB,EAAA,IAACe,EAAA,CACC,GAAG,WACH,UAAW,CAAC,CAAE,SAAAC,KACZ,gDAAgDA,EAAW,4BAA8B,eAAe,GAE3G,SAAA,SAAA,CAAA,EAGH,QAEC,KACC,CAAA,SAAAhB,EAAA,IAAC,SAAA,CACC,QAASF,EACT,UAAU,8EACX,SAAA,UAAA,CAAA,EAGH,CAAA,CAAA,CACF,CACF,CAAA,CACF,CAAA,CAAA,CAEJ,EClGMoB,GAAS,IAEXJ,EAAA,KAAC,MAAI,CAAA,UAAU,4BACb,SAAA,CAAAd,EAAA,IAACa,GAAQ,EAAA,QACR,OAAK,CAAA,UAAU,2BACd,SAAAb,MAACW,GAAO,CAAA,EACV,CACF,CAAA,CAAA,ECAEQ,EAAS,CAAC,CACd,SAAArC,EACA,QAAAsC,EAAU,UACV,KAAAC,EAAO,KACP,UAAAnC,EAAY,GACZ,UAAAoC,EAAY,GACZ,UAAAC,EAAY,GACZ,SAAAC,EACA,GAAGC,CACL,IAAmB,CACjB,MAAMC,EAAa,uIAEbC,EAAgB,CACpB,QAAS,+DACT,UAAW,kEACX,OAAQ,4DACR,QAAS,iEAAA,EAGLC,EAAa,CACjB,GAAI,oBACJ,GAAI,sBACJ,GAAI,mBAAA,EAGAC,EAAaP,EAAY,SAAW,GAGxC,OAAAtB,EAAA,IAAC,SAAA,CACC,UAAW,GAAG0B,CAAU,IAAIC,EAAcP,CAAO,CAAC,IAAIQ,EAAWP,CAAI,CAAC,IAAIQ,CAAU,IAClFL,GAAYtC,EAAY,gCAAkC,EAC5D,IAAIqC,CAAS,GACb,SAAUC,GAAYtC,EACrB,GAAGuC,EAEH,WAEGX,EAAAA,KAAAG,EAAA,SAAA,CAAA,SAAA,CAACH,EAAAA,KAAA,MAAA,CAAI,UAAU,+CAA+C,MAAM,6BAA6B,KAAK,OAAO,QAAQ,YACnH,SAAA,CAAAd,EAAA,IAAC,SAAO,CAAA,UAAU,aAAa,GAAG,KAAK,GAAG,KAAK,EAAE,KAAK,OAAO,eAAe,YAAY,IAAI,QAC3F,OAAK,CAAA,UAAU,aAAa,KAAK,eAAe,EAAE,kHAAkH,CAAA,EACvK,EAAM,YAAA,CAAA,CAER,EAEAlB,CAAA,CAAA,CAIR,ECrDMgD,GAAQ,IAAM,CAClB,KAAM,CAACnC,EAAUoC,CAAW,EAAI9C,WAAS,EAAE,EACrC,CAACW,EAAUoC,CAAW,EAAI/C,WAAS,EAAE,EACrC,CAACY,EAAOoC,CAAQ,EAAIhD,WAAS,EAAE,EAC/B,CAACC,EAAWC,CAAY,EAAIF,WAAS,EAAK,EAE1C,CAAE,OAAAS,GAAWO,IACbiC,EAAWC,IAEXC,EAAe,MAAO9D,GAAiB,CAC3CA,EAAE,eAAe,EACjB2D,EAAS,EAAE,EACX9C,EAAa,EAAI,EAEb,GAAA,CACI,MAAAO,EAAOC,EAAUC,CAAQ,EAC/BsC,EAAS,GAAG,QACLG,EAAU,CACRJ,EAAAI,EAAI,SAAW,mBAAmB,CAAA,QAC3C,CACAlD,EAAa,EAAK,CACpB,CAAA,EAGF,aACG,MAAI,CAAA,UAAU,sFACb,SAAC2B,EAAA,KAAA,MAAA,CAAI,UAAU,4BACb,SAAA,CAAAd,EAAAA,IAAC,OACC,SAACA,EAAA,IAAA,KAAA,CAAG,UAAU,yDAAyD,gCAEvE,CACF,CAAA,EAECc,EAAA,KAAA,OAAA,CAAK,UAAU,iBAAiB,SAAUsB,EACxC,SAAA,CAAAvC,GACEG,EAAA,IAAA,MAAA,CAAI,UAAU,iEACZ,SACHH,EAAA,EAGFiB,EAAAA,KAAC,MAAI,CAAA,UAAU,mCACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAAAd,MAAC,QAAM,CAAA,QAAQ,WAAW,UAAU,UAAU,SAE9C,WAAA,EACAA,EAAA,IAAC,QAAA,CACC,GAAG,WACH,KAAK,WACL,KAAK,OACL,SAAQ,GACR,UAAU,yNACV,YAAY,WACZ,MAAOL,EACP,SAAWrB,GAAMyD,EAAYzD,EAAE,OAAO,KAAK,CAAA,CAC7C,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAAA0B,MAAC,QAAM,CAAA,QAAQ,WAAW,UAAU,UAAU,SAE9C,WAAA,EACAA,EAAA,IAAC,QAAA,CACC,GAAG,WACH,KAAK,WACL,KAAK,WACL,SAAQ,GACR,UAAU,yNACV,YAAY,WACZ,MAAOJ,EACP,SAAWtB,GAAM0D,EAAY1D,EAAE,OAAO,KAAK,CAAA,CAC7C,CAAA,EACF,CAAA,EACF,QAEC,MACC,CAAA,SAAA0B,EAAA,IAACmB,EAAA,CACC,KAAK,SACL,UAAS,GACT,UAAAjC,EACD,SAAA,SAAA,CAAA,EAGH,CAAA,EACF,CAAA,CACF,CAAA,CACF,CAAA,CAEJ,ECnFMoD,EAAO,CAAC,CAAE,SAAAxD,EAAU,UAAAyC,EAAY,GAAI,MAAAgB,KAErCzB,EAAA,KAAA,MAAA,CAAI,UAAW,iDAAiDS,CAAS,GACvE,SAAA,CACCgB,GAAAvC,EAAA,IAAC,OAAI,UAAU,qCACb,eAAC,KAAG,CAAA,UAAU,oCAAqC,SAAAuC,CAAA,CAAM,CAC3D,CAAA,EAEDvC,EAAAA,IAAA,MAAA,CAAI,UAAU,YAAa,SAAAlB,CAAS,CAAA,CACvC,CAAA,CAAA,ECbE0D,GAAU,IAAM,CACd,KAAA,CAAE,KAAApD,GAASa,IACX,CAACwC,EAAgBC,CAAiB,EAAIzD,EAAA,SAAiC,CAAE,CAAA,EAE/EK,OAAAA,EAAAA,UAAU,IAAM,CACVF,GACgBsD,EAAAtD,EAAK,YAAc,CAAA,CAAE,CACzC,EACC,CAACA,CAAI,CAAC,EAGP0B,EAAA,KAAC,MAAI,CAAA,UAAU,oBACb,SAAA,CAACd,EAAA,IAAA,KAAA,CAAG,UAAU,0BAA0B,SAAY,eAAA,QAEnDsC,EAAK,CAAA,UAAU,OACd,SAACxB,EAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACd,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAQ,WAAA,QACzD,IAAE,CAAA,UAAU,eAAgB,UAAAZ,GAAA,YAAAA,EAAM,WAAY,MAAM,CAAA,EACvD,SAEC,MACC,CAAA,SAAA,CAACY,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAK,QAAA,QACtD,IAAE,CAAA,UAAU,eAAgB,SAAAyC,EAAe,OAAS,MAAM,CAAA,EAC7D,EAECA,EAAe,MACd3B,EAAAA,KAAC,MACC,CAAA,SAAA,CAACd,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAI,OAAA,EACrDA,EAAA,IAAA,IAAA,CAAE,UAAU,eAAgB,WAAe,KAAK,CAAA,EACnD,CAAA,CAAA,CAEJ,CACF,CAAA,CACF,CAAA,CAAA,CAEJ,ECpCM2C,GAAY,WAEb,MACC,CAAA,SAAA,CAAC7B,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACd,EAAA,IAAA,KAAA,CAAG,UAAU,qBAAqB,SAAS,YAAA,EAC5Cc,EAAAA,KAAC,MAAI,CAAA,UAAU,iBACb,SAAA,CAACd,EAAAA,IAAA4C,EAAA,CAAK,GAAG,sBACP,SAAA5C,EAAA,IAACmB,GAAO,QAAQ,YAAY,uBAAW,CACzC,CAAA,QACCyB,EAAK,CAAA,GAAG,sBACP,SAAC5C,MAAAmB,EAAA,CAAO,uBAAW,CACrB,CAAA,CAAA,EACF,CAAA,EACF,EAEAL,EAAAA,KAAC,MAAI,CAAA,UAAU,uDACb,SAAA,CAACA,EAAAA,KAAAwB,EAAA,CAAK,MAAM,QACV,SAAA,CAACtC,EAAA,IAAA,MAAA,CAAI,UAAU,qBAAqB,SAAC,IAAA,EACpCA,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAAW,cAAA,CAAA,EAC1C,EAEAc,EAAAA,KAACwB,EAAK,CAAA,MAAM,QACV,SAAA,CAACtC,EAAA,IAAA,MAAA,CAAI,UAAU,qBAAqB,SAAC,IAAA,EACpCA,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAAgB,mBAAA,CAAA,EAC/C,EAEAc,EAAAA,KAACwB,EAAK,CAAA,MAAM,YACV,SAAA,CAACtC,EAAA,IAAA,MAAA,CAAI,UAAU,qBAAqB,SAAC,IAAA,EACpCA,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAAe,kBAAA,CAAA,EAC9C,CAAA,EACF,CACF,CAAA,CAAA,ECzBG,SAAS6C,GAAS,CACvB,KAAM,CAACC,EAASC,CAAU,EAAI9D,WAAS,EAAK,EACtC,CAACY,EAAOoC,CAAQ,EAAIhD,WAAuB,IAAI,EAE/C+D,EAAU,eAED,eAAAC,EAAW,CAAE,KAAAC,EAAM,OAAAC,EAAS,MAAO,KAAAC,EAAM,QAAAC,EAAU,CAAA,GAA8B,CAC9FN,EAAW,EAAI,EACfd,EAAS,IAAI,EAET,GAAA,CAMF,MAAMqB,EAAe,CACnB,QAAS,CACP,eAAgB,mBAChB,cAAiB,WAPL,MAAMC,EAAI,KAAK,eAAe,GACxB,WAAW,EAAE,YAAY,CAMX,GAChC,GAAGF,CACL,CAAA,EAGED,IACME,EAAA,KAAO,KAAK,UAAUF,CAAI,GAGpC,QAAQ,IAAI,eAAgB,CAAE,KAAAF,EAAM,OAAAC,EAAQ,QAAAG,EAAS,EACrD,MAAME,EAAW,MAAMD,EAAI,IAAIP,EAASE,EAAMI,CAAO,EAC7C,eAAA,IAAI,gBAAiBE,CAAQ,EAC9BA,QACAnB,EAAK,CACJ,cAAA,MAAM,aAAcA,CAAG,EAC/BJ,EAASI,aAAe,MAAQA,EAAM,IAAI,MAAM,wBAAwB,CAAC,EACnEA,CAAA,QACN,CACAU,EAAW,EAAK,CAClB,CACF,CAEO,MAAA,CACL,QAAAE,EACA,QAAAH,EACA,MAAAjD,CAAA,CAEJ,CCzCA,MAAM4D,GAAQ,IAAM,CAClB,KAAM,CAACC,EAAOC,CAAQ,EAAI1E,EAAA,SAAiB,CAAE,CAAA,EACvC,CAAC6D,EAASC,CAAU,EAAI9D,WAAS,EAAI,EACrC,CAACY,EAAOoC,CAAQ,EAAIhD,WAAS,EAAE,EAC/B,CAAE,QAAAgE,GAAYJ,IAEpBvD,OAAAA,EAAAA,UAAU,IAAM,EACK,SAAY,CACzB,GAAA,CAEI,MAAAsE,EAAO,MAAMX,EAAgB,CACjC,KAAM,eACN,QAAS,CACP,iBAAkB,MACpB,CAAA,CACD,EACDU,EAAS,MAAM,QAAQC,CAAI,EAAIA,EAAO,CAAA,CAAE,QACjCvB,EAAK,CACJ,QAAA,MAAM,wBAAyBA,CAAG,EAC1CJ,EAAS,sBAAsB,CAAA,QAC/B,CACAc,EAAW,EAAK,CAClB,CAAA,IAIJ,EAAG,CAAE,CAAA,SAGF,MACC,CAAA,SAAA,CAACjC,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACd,EAAA,IAAA,KAAA,CAAG,UAAU,qBAAqB,SAAY,eAAA,QAC9C4C,EAAK,CAAA,GAAG,sBACP,SAAC5C,MAAAmB,EAAA,CAAO,uBAAW,CACrB,CAAA,CAAA,EACF,EAECtB,GACCG,EAAA,IAAC,MAAI,CAAA,UAAU,sEACZ,SACHH,EAAA,EAGFG,EAAA,IAACsC,EACE,CAAA,SAAAQ,EACE9C,EAAAA,IAAA,MAAA,CAAI,UAAU,mBACb,SAAAA,EAAAA,IAAC,IAAE,CAAA,UAAU,gBAAgB,SAAA,kBAAgB,CAAA,CAC/C,CAAA,EACE0D,EAAM,OAAS,EAChB1D,EAAAA,IAAA,MAAA,CAAI,UAAU,kBACb,SAAAc,EAAAA,KAAC,QAAM,CAAA,UAAU,sCACf,SAAA,CAAAd,MAAC,QAAM,CAAA,UAAU,aACf,SAAAc,EAAA,KAAC,KACC,CAAA,SAAA,CAACd,EAAA,IAAA,KAAA,CAAG,UAAU,iFAAiF,SAAK,QAAA,EACnGA,EAAA,IAAA,KAAA,CAAG,UAAU,iFAAiF,SAAM,SAAA,EACpGA,EAAA,IAAA,KAAA,CAAG,UAAU,iFAAiF,SAAQ,WAAA,EACtGA,EAAA,IAAA,KAAA,CAAG,UAAU,iFAAiF,SAAO,UAAA,CAAA,CAAA,CACxG,CACF,CAAA,EACAA,EAAAA,IAAC,SAAM,UAAU,oCACd,WAAM,IAAK6D,GACV/C,EAAAA,KAAC,KACC,CAAA,SAAA,CAAAd,EAAA,IAAC,KAAG,CAAA,UAAU,8BAA+B,SAAA6D,EAAK,MAAM,QACvD,KAAG,CAAA,UAAU,8BACZ,SAAA7D,MAAC,QAAK,UAAW;AAAA,0BACb6D,EAAK,SAAW,YAAc,8BAC9BA,EAAK,SAAW,cAAgB,4BAChC,+BAA+B,GAChC,SAAKA,EAAA,MACR,CAAA,EACF,EACC7D,EAAA,IAAA,KAAA,CAAG,UAAU,8BAA+B,WAAK,SAAS,EAC3DA,EAAAA,IAAC,KAAG,CAAA,UAAU,8BAA+B,SAAA,IAAI,KAAK6D,EAAK,SAAS,EAAE,mBAAqB,CAAA,CAAA,CAXpF,CAAA,EAAAA,EAAK,MAYd,CACD,EACH,CAAA,CACF,CAAA,CACF,CAAA,EAEC7D,EAAA,IAAA,MAAA,CAAI,UAAU,mBACb,SAACA,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAAkB,oBAAA,CAAA,CACjD,CAAA,EAEJ,CACF,CAAA,CAAA,CAEJ,ECrFM8D,GAAQ,IAAM,CAClB,KAAM,CAACC,EAAOC,CAAQ,EAAI/E,EAAA,SAAiB,CAAE,CAAA,EACvC,CAAC6D,EAASC,CAAU,EAAI9D,WAAS,EAAI,EACrC,CAACY,EAAOoC,CAAQ,EAAIhD,WAAS,EAAE,EAC/B,CAAE,QAAAgE,GAAYJ,IAEpBvD,OAAAA,EAAAA,UAAU,IAAM,EACK,SAAY,CACzB,GAAA,CACI,MAAAsE,EAAO,MAAMX,EAAgB,CACjC,KAAM,eACN,QAAS,CACP,iBAAkB,MACpB,CAAA,CACD,EACDe,EAAS,MAAM,QAAQJ,CAAI,EAAIA,EAAO,CAAA,CAAE,QACjCvB,EAAK,CACJ,QAAA,MAAM,wBAAyBA,CAAG,EAC1CJ,EAAS,sBAAsB,CAAA,QAC/B,CACAc,EAAW,EAAK,CAClB,CAAA,IAIJ,EAAG,CAAE,CAAA,SAGF,MACC,CAAA,SAAA,CAACjC,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACd,EAAA,IAAA,KAAA,CAAG,UAAU,qBAAqB,SAAY,eAAA,QAC9C4C,EAAK,CAAA,GAAG,sBACP,SAAC5C,MAAAmB,EAAA,CAAO,uBAAW,CACrB,CAAA,CAAA,EACF,EAECtB,GACCG,EAAA,IAAC,MAAI,CAAA,UAAU,sEACZ,SACHH,EAAA,EAGFG,EAAA,IAACsC,EACE,CAAA,SAAAQ,EACE9C,EAAAA,IAAA,MAAA,CAAI,UAAU,mBACb,SAAAA,EAAAA,IAAC,IAAE,CAAA,UAAU,gBAAgB,SAAA,kBAAgB,CAAA,CAC/C,CAAA,EACE+D,EAAM,OAAS,EAChB/D,EAAAA,IAAA,MAAA,CAAI,UAAU,kBACb,SAAAc,EAAAA,KAAC,QAAM,CAAA,UAAU,sCACf,SAAA,CAAAd,MAAC,QAAM,CAAA,UAAU,aACf,SAAAc,EAAA,KAAC,KACC,CAAA,SAAA,CAACd,EAAA,IAAA,KAAA,CAAG,UAAU,iFAAiF,SAAI,OAAA,EAClGA,EAAA,IAAA,KAAA,CAAG,UAAU,iFAAiF,SAAK,QAAA,EACnGA,EAAA,IAAA,KAAA,CAAG,UAAU,iFAAiF,SAAI,OAAA,EAClGA,EAAA,IAAA,KAAA,CAAG,UAAU,iFAAiF,SAAM,SAAA,EACpGA,EAAA,IAAA,KAAA,CAAG,UAAU,iFAAiF,SAAU,aAAA,CAAA,CAAA,CAC3G,CACF,CAAA,EACAA,EAAAA,IAAC,SAAM,UAAU,oCACd,WAAM,IAAKZ,GACV0B,EAAAA,KAAC,KACC,CAAA,SAAA,CAAAd,MAAC,KAAG,CAAA,UAAU,8BACZ,SAAAA,EAAA,IAAC4C,GAAK,GAAI,gBAAgBxD,EAAK,MAAM,GAAI,UAAU,oCAChD,SAAAA,EAAK,IACR,CAAA,EACF,EACCY,EAAA,IAAA,KAAA,CAAG,UAAU,8BAA+B,WAAK,MAAM,EACvDA,EAAA,IAAA,KAAA,CAAG,UAAU,8BAA+B,WAAK,KAAK,QACtD,KAAG,CAAA,UAAU,8BACZ,SAAAA,MAAC,QAAK,UAAW;AAAA,0BACbZ,EAAK,SAAW,8BAAgC,yBAAyB,GAC1E,SAAKA,EAAA,SAAW,SAAW,UAAA,CAC9B,CACF,CAAA,QACC,KAAG,CAAA,UAAU,8BAA+B,SAAAA,EAAK,YAAc,IAAI,CAd7D,CAAA,EAAAA,EAAK,MAed,CACD,EACH,CAAA,CACF,CAAA,CACF,CAAA,EAECY,EAAA,IAAA,MAAA,CAAI,UAAU,mBACb,SAACA,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAAkB,oBAAA,CAAA,CACjD,CAAA,EAEJ,CACF,CAAA,CAAA,CAEJ,EC5FMiE,GAAa,IAAM,CACvB,KAAM,CAAC1B,EAAO2B,CAAQ,EAAIjF,WAAS,EAAE,EAC/B,CAACkF,EAAaC,CAAc,EAAInF,WAAS,EAAE,EAC3C,CAACoF,EAAUC,CAAW,EAAIrF,WAAS,QAAQ,EAC3C,CAACsF,EAAYC,CAAa,EAAIvF,WAAS,EAAE,EACzC,CAACwF,EAASC,CAAU,EAAIzF,WAAS,EAAE,EACnC,CAAC8E,EAAOC,CAAQ,EAAI/E,EAAA,SAAiB,CAAE,CAAA,EACvC,CAACC,EAAWC,CAAY,EAAIF,WAAS,EAAK,EAC1C,CAACY,EAAOoC,CAAQ,EAAIhD,WAAS,EAAE,EAC/BiD,EAAWC,IACX,CAAE,QAAAc,GAAYJ,IAEpBvD,EAAAA,UAAU,IAAM,EACK,SAAY,CACzB,GAAA,CAGF,MAAMqF,GAFO,MAAM1B,EAAgB,CAAE,KAAM,QAAU,CAAA,GAE3B,OAAe7D,GAAAA,EAAK,OAAS,MAAM,EAC7D4E,EAASW,CAAY,QACdtC,EAAK,CACJ,QAAA,MAAM,wBAAyBA,CAAG,CAC5C,CAAA,IAIJ,EAAG,CAAE,CAAA,EAEC,MAAAD,EAAe,MAAO9D,GAAiB,CAC3CA,EAAE,eAAe,EACjBa,EAAa,EAAI,EACjB8C,EAAS,EAAE,EAEP,GAAA,CACF,MAAMgB,EAAQ,CACZ,KAAM,SACN,OAAQ,OACR,KAAM,CACJ,MAAAV,EACA,YAAA4B,EACA,SAAAE,EACA,WAAAE,EACA,QAASE,GAAW,OACpB,iBAAkB,EACpB,CAAA,CACD,EACDvC,EAAS,cAAc,QAChBG,EAAK,CACJ,QAAA,MAAM,uBAAwBA,CAAG,EACzCJ,EAAS,0CAA0C,CAAA,QACnD,CACA9C,EAAa,EAAK,CACpB,CAAA,EAGF,cACG,MACC,CAAA,SAAA,CAACa,EAAA,IAAA,KAAA,CAAG,UAAU,0BAA0B,SAAW,cAAA,EAElDH,GACCG,EAAA,IAAC,MAAI,CAAA,UAAU,sEACZ,SACHH,EAAA,EAGDG,MAAAsC,EAAA,CACC,SAACxB,EAAAA,KAAA,OAAA,CAAK,SAAUsB,EACd,SAAA,CAACtB,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAAAd,MAAC,QAAM,CAAA,QAAQ,QAAQ,UAAU,+CAA+C,SAEhF,QAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,QACH,MAAOuC,EACP,SAAWjE,GAAM4F,EAAS5F,EAAE,OAAO,KAAK,EACxC,UAAU,kHACV,SAAQ,EAAA,CACV,CAAA,EACF,EAEAwC,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAd,MAAC,QAAM,CAAA,QAAQ,cAAc,UAAU,+CAA+C,SAEtF,cAAA,EACAA,EAAA,IAAC,WAAA,CACC,GAAG,cACH,MAAOmE,EACP,SAAW7F,GAAM8F,EAAe9F,EAAE,OAAO,KAAK,EAC9C,KAAM,EACN,UAAU,kHACV,SAAQ,EAAA,CACV,CAAA,EACF,EAEAwC,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAd,MAAC,QAAM,CAAA,QAAQ,WAAW,UAAU,+CAA+C,SAEnF,WAAA,EACAc,EAAA,KAAC,SAAA,CACC,GAAG,WACH,MAAOuD,EACP,SAAW/F,GAAMgG,EAAYhG,EAAE,OAAO,KAAK,EAC3C,UAAU,kHACV,SAAQ,GAER,SAAA,CAAC0B,EAAA,IAAA,SAAA,CAAO,MAAM,MAAM,SAAG,MAAA,EACtBA,EAAA,IAAA,SAAA,CAAO,MAAM,SAAS,SAAM,SAAA,EAC5BA,EAAA,IAAA,SAAA,CAAO,MAAM,OAAO,SAAI,OAAA,CAAA,CAAA,CAC3B,CAAA,EACF,EAEAc,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAd,MAAC,QAAM,CAAA,QAAQ,aAAa,UAAU,+CAA+C,SAErF,YAAA,EACAc,EAAA,KAAC,SAAA,CACC,GAAG,aACH,MAAOyD,EACP,SAAWjG,GAAMkG,EAAclG,EAAE,OAAO,KAAK,EAC7C,UAAU,kHAEV,SAAA,CAAC0B,EAAA,IAAA,SAAA,CAAO,MAAM,GAAG,SAAa,gBAAA,EAC7B+D,EAAM,IAAI3E,UACR,SAAyB,CAAA,MAAOA,EAAK,OACnC,SAAA,CAAKA,EAAA,KAAK,KAAGA,EAAK,MAAM,GAAA,GADdA,EAAK,MAElB,CACD,CAAA,CAAA,CACH,CAAA,EACF,EAEA0B,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAd,MAAC,QAAM,CAAA,QAAQ,UAAU,UAAU,+CAA+C,SAElF,sBAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,UACH,MAAOyE,EACP,SAAWnG,GAAMoG,EAAWpG,EAAE,OAAO,KAAK,EAC1C,UAAU,kHACV,QAAS,OAAO,YAAc,EAAA,MAAM,GAAG,EAAE,CAAC,CAAA,CAC5C,CAAA,EACF,EAEAwC,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAAAd,EAAA,IAACmB,EAAO,CAAA,KAAK,SAAS,QAAQ,YAAY,UAAU,OAAO,QAAS,IAAMe,EAAS,cAAc,EAAG,SAEpG,SAAA,EACClC,EAAA,IAAAmB,EAAA,CAAO,KAAK,SAAS,UAAAjC,EAAsB,SAE5C,cAAA,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,CACF,CAAA,CAAA,CAEJ,ECnKa0F,EAAe,CAE1B,MAAM,WAAWC,EAKd,CACG,GAAA,CAEF,MAAMrB,EAAW,MAAM,MAAM,qEAAoD,CAC/E,OAAQ,OACR,QAAS,CACP,eAAgB,mBAChB,cAAiB,WAAW,MAAM/D,EAAK,kBAAkB,WAAA,EAAa,YAAA,CAAa,EACrF,EACA,KAAM,KAAK,UAAU,CACnB,MAAOoF,EAAS,MAChB,KAAMA,EAAS,KACf,KAAMA,EAAS,MAAQ,MAAA,CACxB,CAAA,CACF,EAEG,GAAA,CAACrB,EAAS,GACZ,MAAM,IAAI,MAAM,cAAcA,EAAS,MAAM,EAAE,EAG3C,MAAAI,EAAO,MAAMJ,EAAS,OACrB,MAAA,CACL,KAAM,CAAE,SAAUqB,EAAS,QAAS,EACpC,aAAcjB,EAAK,cAAgB,0BAAA,QAE9B/D,EAAO,CACN,cAAA,MAAM,uBAAwBA,CAAK,EACrCA,CACR,CACF,EAGA,MAAM,kBAAkBF,EAAkB,CACpC,GAAA,CAEI,MAAA6D,EAAW,MAAM,MAAM,sEAAoD7D,CAAQ,kBAAmB,CAC1G,OAAQ,OACR,QAAS,CACP,eAAgB,mBAChB,cAAiB,WAAW,MAAMF,EAAK,kBAAkB,WAAA,EAAa,YAAA,CAAa,EACrF,CAAA,CACD,EAEG,GAAA,CAAC+D,EAAS,GACZ,MAAM,IAAI,MAAM,cAAcA,EAAS,MAAM,EAAE,EAIjD,MAAO,CAAE,cADI,MAAMA,EAAS,QACA,cAAgB,0BAA2B,QAChE3D,EAAO,CACN,cAAA,MAAM,4BAA6BA,CAAK,EAC1CA,CACR,CACF,CACF,EC5DMiF,GAAa,IAAM,CACvB,KAAM,CAACC,EAAMC,CAAO,EAAI/F,WAAS,EAAE,EAC7B,CAACgG,EAAOC,CAAQ,EAAIjG,WAAS,EAAE,EAC/B,CAACkG,EAAMC,CAAO,EAAInG,WAAS,MAAM,EACjC,CAACoG,EAAYC,CAAa,EAAIrG,WAAS,EAAE,EACzC,CAACC,EAAWC,CAAY,EAAIF,WAAS,EAAK,EAC1C,CAACY,EAAOoC,CAAQ,EAAIhD,WAAS,EAAE,EAC/B,CAACsG,EAASC,CAAU,EAAIvG,WAAS,EAAE,EACnCiD,EAAWC,IACGU,EAAO,EAErB,MAAAT,EAAe,MAAO9D,GAAiB,CAC3CA,EAAE,eAAe,EACjBa,EAAa,EAAI,EACjB8C,EAAS,EAAE,EACXuD,EAAW,EAAE,EAET,GAAA,CACF,QAAQ,IAAI,iBAAkB,CAAE,KAAAT,EAAM,MAAAE,CAAO,CAAA,EAGvC,MAAAQ,EAAS,MAAMb,EAAa,WAAW,CAC3C,SAAUK,EACV,MAAAA,EACA,KAAAF,CAAA,CACD,EAEO,QAAA,IAAI,gBAAiBU,CAAM,EAExBD,EAAA,kDAAkDC,EAAO,YAAY,EAAE,EAGlFT,EAAQ,EAAE,EACVE,EAAS,EAAE,EACXE,EAAQ,MAAM,EACdE,EAAc,EAAE,EAGhB,WAAW,IAAM,CACfpD,EAAS,cAAc,GACtB,GAAI,QACAG,EAAK,CACJ,QAAA,MAAM,uBAAwBA,CAAG,EAErCA,aAAe,MACRJ,EAAA,0BAA0BI,EAAI,OAAO,EAAE,EAEhDJ,EAAS,0CAA0C,CACrD,QACA,CACA9C,EAAa,EAAK,CACpB,CAAA,EAGF,cACG,MACC,CAAA,SAAA,CAACa,EAAA,IAAA,KAAA,CAAG,UAAU,0BAA0B,SAAW,cAAA,EAElDH,GACCG,EAAA,IAAC,MAAI,CAAA,UAAU,sEACZ,SACHH,EAAA,EAGD0F,GACCvF,EAAA,IAAC,MAAI,CAAA,UAAU,4EACZ,SACHuF,EAAA,EAGDvF,MAAAsC,EAAA,CACC,SAACxB,EAAAA,KAAA,OAAA,CAAK,SAAUsB,EACd,SAAA,CAACtB,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAAAd,MAAC,QAAM,CAAA,QAAQ,OAAO,UAAU,+CAA+C,SAE/E,YAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,OACH,MAAO+E,EACP,SAAWzG,GAAM0G,EAAQ1G,EAAE,OAAO,KAAK,EACvC,UAAU,kHACV,SAAQ,EAAA,CACV,CAAA,EACF,EAEAwC,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAd,MAAC,QAAM,CAAA,QAAQ,QAAQ,UAAU,+CAA+C,SAEhF,gBAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,QACL,GAAG,QACH,MAAOiF,EACP,SAAW3G,GAAM4G,EAAS5G,EAAE,OAAO,KAAK,EACxC,UAAU,kHACV,SAAQ,EAAA,CACV,CAAA,EACF,EAEAwC,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAd,MAAC,QAAM,CAAA,QAAQ,OAAO,UAAU,+CAA+C,SAE/E,OAAA,EACAc,EAAA,KAAC,SAAA,CACC,GAAG,OACH,MAAOqE,EACP,SAAW7G,GAAM8G,EAAQ9G,EAAE,OAAO,KAAK,EACvC,UAAU,kHACV,SAAQ,GAER,SAAA,CAAC0B,EAAA,IAAA,SAAA,CAAO,MAAM,OAAO,SAAI,OAAA,EACxBA,EAAA,IAAA,SAAA,CAAO,MAAM,QAAQ,SAAK,QAAA,CAAA,CAAA,CAC7B,CAAA,EACF,EAEAc,EAAAA,KAAC,MAAI,CAAA,UAAU,OACb,SAAA,CAAAd,MAAC,QAAM,CAAA,QAAQ,aAAa,UAAU,+CAA+C,SAErF,wBAAA,EACAA,EAAA,IAAC,QAAA,CACC,KAAK,OACL,GAAG,aACH,MAAOqF,EACP,SAAW/G,GAAMgH,EAAchH,EAAE,OAAO,KAAK,EAC7C,UAAU,iHAAA,CACZ,CAAA,EACF,EAIAwC,EAAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAAAd,EAAA,IAACmB,EAAO,CAAA,KAAK,SAAS,QAAQ,YAAY,UAAU,OAAO,QAAS,IAAMe,EAAS,cAAc,EAAG,SAEpG,SAAA,EACClC,EAAA,IAAAmB,EAAA,CAAO,KAAK,SAAS,UAAAjC,EAAsB,SAE5C,cAAA,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,CACF,CAAA,CAAA,CAEJ,ECrIMwG,GAAc,IAAM,CAClB,KAAA,CAAE,GAAAC,GAAOC,IACT,CAACxG,EAAMC,CAAO,EAAIJ,WAAsB,IAAI,EAC5C,CAAC6D,EAASC,CAAU,EAAI9D,WAAS,EAAI,EACrC,CAACY,EAAOoC,CAAQ,EAAIhD,WAAS,EAAE,EAC/B,CAAE,QAAAgE,GAAYJ,IACdX,EAAWC,IAEjB7C,EAAAA,UAAU,IAAM,CAkBVqG,IAjBc,SAAY,CACxB,GAAA,CACI,MAAA/B,EAAO,MAAMX,EAAc,CAC/B,KAAM,gBAAgB0C,CAAE,GACxB,QAAS,CACP,iBAAkB,MACpB,CAAA,CACD,EACDtG,EAAQuE,CAAI,QACLvB,EAAK,CACJ,QAAA,MAAM,+BAAgCA,CAAG,EACjDJ,EAAS,6BAA6B,CAAA,QACtC,CACAc,EAAW,EAAK,CAClB,CAAA,IAKF,EACC,CAAC4C,CAAE,CAAC,EAEP,MAAME,EAAgB,IAAM,CACtBzG,GACO8C,EAAA,gBAAgB9C,EAAK,KAAK,iBAAiB,CACtD,EAGF,OAAI0D,EAEA9C,EAAAA,IAAC,OAAI,UAAU,mBACb,eAAC,IAAE,CAAA,UAAU,gBAAgB,SAAA,yBAAuB,CAAA,CACtD,CAAA,EAIAH,EAECG,EAAAA,IAAA,MAAA,CAAI,UAAU,iEACZ,SACHH,CAAA,CAAA,EAICT,SAYF,MACC,CAAA,SAAA,CAAC0B,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAACd,EAAA,IAAA,KAAA,CAAG,UAAU,qBAAqB,SAAY,eAAA,EAC/CA,EAAAA,IAACmB,GAAO,QAAS,IAAMe,EAAS,cAAc,EAAG,QAAQ,YAAY,SAErE,eAAA,CAAA,CAAA,EACF,EAEClC,MAAAsC,EAAA,CACC,SAACxB,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACd,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAiB,oBAAA,EACnEc,EAAAA,KAAC,MAAI,CAAA,UAAU,uDACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACd,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAI,OAAA,EACrDA,EAAA,IAAA,KAAA,CAAG,UAAU,6BAA8B,WAAK,KAAK,CAAA,EACxD,SACC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAK,QAAA,EACtDA,EAAA,IAAA,KAAA,CAAG,UAAU,6BAA8B,WAAK,MAAM,CAAA,EACzD,SACC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAI,OAAA,EACrDA,EAAA,IAAA,KAAA,CAAG,UAAU,6BAA8B,WAAK,KAAK,CAAA,EACxD,SACC,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAM,SAAA,QACvD,KAAG,CAAA,UAAU,OACZ,SAAAA,MAAC,QAAK,UAAW;AAAA,sBACbZ,EAAK,SAAW,8BAAgC,yBAAyB,GAC1E,SAAKA,EAAA,SAAW,SAAW,UAAA,CAC9B,CACF,CAAA,CAAA,EACF,EACCA,EAAK,YACJ0B,EAAAA,KAAC,MACC,CAAA,SAAA,CAACd,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAU,aAAA,EAC3DA,EAAA,IAAA,KAAA,CAAG,UAAU,6BAA8B,WAAK,WAAW,CAAA,EAC9D,EAEDZ,EAAK,aACJ0B,EAAAA,KAAC,MACC,CAAA,SAAA,CAACd,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAY,eAAA,EAC7DA,EAAA,IAAA,KAAA,CAAG,UAAU,6BAA8B,WAAK,YAAY,CAAA,EAC/D,SAED,MACC,CAAA,SAAA,CAACA,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAO,UAAA,EACzDA,EAAAA,IAAC,KAAG,CAAA,UAAU,6BACX,SAAA,IAAI,KAAKZ,EAAK,SAAS,EAAE,mBAC5B,CAAA,CAAA,CAAA,EACF,CAAA,EACF,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAACY,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAO,UAAA,EACzDA,EAAAA,IAAC,OAAI,UAAU,sBACb,eAACmB,EAAO,CAAA,QAAS0E,EAAe,SAAA,gBAAA,CAEhC,CACF,CAAA,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,CACF,CAAA,CAAA,EA3EE/E,EAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACd,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAAc,iBAAA,EAC3CA,EAAAA,IAACmB,GAAO,QAAS,IAAMe,EAAS,cAAc,EAAG,UAAU,OAAO,SAElE,eAAA,CAAA,CACF,CAAA,CAAA,CAwEN,EC/IM4D,GAAgB,IAAM,CACpB,KAAA,CAAE,SAAAnG,GAAaiG,IACf,CAAC1G,EAAWC,CAAY,EAAIF,WAAS,EAAK,EAC1C,CAACY,EAAOoC,CAAQ,EAAIhD,WAAS,EAAE,EAC/B,CAAC8G,EAAcC,CAAe,EAAI/G,WAAS,EAAE,EAC7CiD,EAAWC,IAEX8D,EAAsB,SAAY,CACtC,GAAKtG,EAEL,CAAAR,EAAa,EAAI,EACjB8C,EAAS,EAAE,EACX+D,EAAgB,EAAE,EAEd,GAAA,CACF,MAAMP,EAAS,MAAMb,EAAa,kBAAkBjF,CAAQ,EAC5DqG,EAAgBP,EAAO,YAAY,QAC5BpD,EAAK,CACJ,QAAA,MAAM,4BAA6BA,CAAG,EAC1CA,aAAe,MACRJ,EAAA,6BAA6BI,EAAI,OAAO,EAAE,EAEnDJ,EAAS,6CAA6C,CACxD,QACA,CACA9C,EAAa,EAAK,CACpB,EAAA,EAGF,cACG,MACC,CAAA,SAAA,CAACa,EAAA,IAAA,KAAA,CAAG,UAAU,0BAA0B,SAAmB,sBAAA,EAE1DH,GACCG,EAAA,IAAC,MAAI,CAAA,UAAU,sEACZ,SACHH,EAAA,SAGDyC,EACC,CAAA,SAAA,CAACxB,EAAAA,KAAA,MAAA,CAAI,UAAU,OACb,SAAA,CAACA,EAAAA,KAAA,IAAA,CAAE,UAAU,gBAAgB,SAAA,CAAA,iDACmBd,EAAAA,IAAC,UAAQ,SAASL,CAAA,CAAA,CAAA,EAClE,EACCK,EAAA,IAAA,IAAA,CAAE,UAAU,qBAAqB,SAElC,qGAAA,CAAA,EACF,EAEC+F,QACE,MAAI,CAAA,UAAU,OACb,SAACjF,EAAAA,KAAA,MAAA,CAAI,UAAU,uEACb,SAAA,CAACd,EAAA,IAAA,IAAA,CAAE,UAAU,YAAY,SAA4B,+BAAA,EACrDc,EAAAA,KAAC,IAAE,CAAA,UAAU,OAAO,SAAA,CAAA,uBAAoBd,EAAAA,IAAC,UAAQ,SAAa+F,CAAA,CAAA,CAAA,EAAS,EACtE/F,EAAA,IAAA,IAAA,CAAE,UAAU,eAAe,SAAwD,2DAAA,CAAA,CACtF,CAAA,CACF,CAAA,EACE,KAEJc,EAAAA,KAAC,MAAI,CAAA,UAAU,6BACb,SAAA,CAAAd,EAAA,IAACmB,EAAA,CACC,KAAK,SACL,QAAQ,YACR,QAAS,IAAMe,EAAS,EAAE,EAC3B,SAAA,MAAA,CAED,EAEC,CAAC6D,GACA/F,EAAA,IAACmB,EAAA,CACC,KAAK,SACL,QAAS8E,EACT,UAAA/G,EACD,SAAA,gBAAA,CAED,CAAA,EAEJ,CAAA,EACF,CACF,CAAA,CAAA,CAEJ,EC1EMgH,GAAgB,IAAM,CAC1B,KAAM,CAACC,EAAOC,CAAQ,EAAInH,WAAoB,CAC5C,MAAO,EACP,UAAW,EACX,WAAY,EACZ,QAAS,CAAA,CACV,EACK,CAAC6D,EAASC,CAAU,EAAI9D,WAAS,EAAI,EACrC,CAACY,EAAOoC,CAAQ,EAAIhD,WAAS,EAAE,EAC/B,CAAE,QAAAgE,GAAYJ,IACd,CAAE,KAAAzD,GAASa,IAEjBX,OAAAA,EAAAA,UAAU,IAAM,CAkBVF,IAjBmB,SAAY,CAC7B,GAAA,CACI,MAAAwE,EAAO,MAAMX,EAAmB,CACpC,KAAM,eACN,QAAS,CACP,aAAa7D,GAAA,YAAAA,EAAM,WAAY,EACjC,CAAA,CACD,EACDgH,EAASxC,CAAI,QACNvB,EAAK,CACJ,QAAA,MAAM,6BAA8BA,CAAG,EAC/CJ,EAAS,gCAAgC,CAAA,QACzC,CACAc,EAAW,EAAK,CAClB,CAAA,IAKF,EACC,CAAC3D,CAAI,CAAC,SAGN,MACC,CAAA,SAAA,CAACY,EAAA,IAAA,KAAA,CAAG,UAAU,0BAA0B,SAAY,eAAA,EAEnDH,GACCG,EAAA,IAAC,MAAI,CAAA,UAAU,sEACZ,SACHH,EAAA,EAGFiB,EAAAA,KAAC,MAAI,CAAA,UAAU,uDACb,SAAA,CAACA,EAAAA,KAAAwB,EAAA,CAAK,MAAM,cACV,SAAA,CAAAtC,EAAA,IAAC,MAAI,CAAA,UAAU,qBAAsB,SAAAmG,EAAM,MAAM,EAChDnG,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAAe,kBAAA,CAAA,EAC9C,EAEAc,EAAAA,KAACwB,EAAK,CAAA,MAAM,UACV,SAAA,CAAAtC,EAAA,IAAC,MAAI,CAAA,UAAU,qCAAsC,SAAAmG,EAAM,QAAQ,EAClEnG,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAAW,cAAA,CAAA,EAC1C,EAEAc,EAAAA,KAACwB,EAAK,CAAA,MAAM,cACV,SAAA,CAAAtC,EAAA,IAAC,MAAI,CAAA,UAAU,mCAAoC,SAAAmG,EAAM,WAAW,EACnEnG,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAAiB,oBAAA,CAAA,EAChD,EAEAc,EAAAA,KAACwB,EAAK,CAAA,MAAM,YACV,SAAA,CAAAtC,EAAA,IAAC,MAAI,CAAA,UAAU,oCAAqC,SAAAmG,EAAM,UAAU,EACnEnG,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAAc,iBAAA,CAAA,EAC7C,CAAA,EACF,EAEAA,EAAAA,IAAC,MAAI,CAAA,UAAU,OACb,SAAAA,EAAA,IAAC4C,EAAA,CACC,GAAG,SACH,UAAU,gDACX,SAAA,qBAAA,CAAA,EAGH,CACF,CAAA,CAAA,CAEJ,EC1EMyD,GAAY,IAAM,CACtB,KAAM,CAAC3C,EAAOC,CAAQ,EAAI1E,EAAA,SAAiB,CAAE,CAAA,EACvC,CAAC6D,EAASC,CAAU,EAAI9D,WAAS,EAAI,EACrC,CAACY,EAAOoC,CAAQ,EAAIhD,WAAS,EAAE,EAC/B,CAAE,QAAAgE,GAAYJ,IACd,CAAE,KAAAzD,GAASa,IAEjBX,OAAAA,EAAAA,UAAU,IAAM,CAkBVF,IAjBmB,SAAY,CAC7B,GAAA,CACI,MAAAwE,EAAO,MAAMX,EAAgB,CACjC,KAAM,kBACN,QAAS,CACP,aAAa7D,GAAA,YAAAA,EAAM,WAAY,EACjC,CAAA,CACD,EACDuE,EAAS,MAAM,QAAQC,CAAI,EAAIA,EAAO,CAAA,CAAE,QACjCvB,EAAK,CACJ,QAAA,MAAM,wBAAyBA,CAAG,EAC1CJ,EAAS,2BAA2B,CAAA,QACpC,CACAc,EAAW,EAAK,CAClB,CAAA,IAKF,EACC,CAAC3D,CAAI,CAAC,SAGN,MACC,CAAA,SAAA,CAACY,EAAA,IAAA,KAAA,CAAG,UAAU,0BAA0B,SAAQ,WAAA,EAE/CH,GACCG,EAAA,IAAC,MAAI,CAAA,UAAU,sEACZ,SACHH,EAAA,EAGFG,EAAA,IAACsC,EACE,CAAA,SAAAQ,EACE9C,EAAAA,IAAA,MAAA,CAAI,UAAU,mBACb,SAAAA,EAAAA,IAAC,IAAE,CAAA,UAAU,gBAAgB,SAAA,kBAAgB,CAAA,CAC/C,CAAA,EACE0D,EAAM,OAAS,EAChB1D,EAAAA,IAAA,MAAA,CAAI,UAAU,kBACb,SAAAc,EAAAA,KAAC,QAAM,CAAA,UAAU,sCACf,SAAA,CAAAd,MAAC,QAAM,CAAA,UAAU,aACf,SAAAc,EAAA,KAAC,KACC,CAAA,SAAA,CAACd,EAAA,IAAA,KAAA,CAAG,UAAU,iFAAiF,SAAK,QAAA,EACnGA,EAAA,IAAA,KAAA,CAAG,UAAU,iFAAiF,SAAM,SAAA,EACpGA,EAAA,IAAA,KAAA,CAAG,UAAU,iFAAiF,SAAQ,WAAA,EACtGA,EAAA,IAAA,KAAA,CAAG,UAAU,iFAAiF,SAAO,UAAA,CAAA,CAAA,CACxG,CACF,CAAA,EACAA,EAAAA,IAAC,SAAM,UAAU,oCACd,WAAM,IAAK6D,GACV/C,EAAAA,KAAC,KACC,CAAA,SAAA,CAAAd,EAAA,IAAC,KAAG,CAAA,UAAU,8BAA+B,SAAA6D,EAAK,MAAM,QACvD,KAAG,CAAA,UAAU,8BACZ,SAAA7D,MAAC,QAAK,UAAW;AAAA,0BACb6D,EAAK,SAAW,YAAc,8BAC9BA,EAAK,SAAW,cAAgB,4BAChC,+BAA+B,GAChC,SAAKA,EAAA,MACR,CAAA,EACF,EACC7D,EAAA,IAAA,KAAA,CAAG,UAAU,8BAA+B,WAAK,SAAS,EAC3DA,EAAAA,IAAC,KAAG,CAAA,UAAU,8BACZ,SAAAA,EAAA,IAAC4C,EAAA,CACC,GAAI,UAAUiB,EAAK,MAAM,GACzB,UAAU,oCACX,SAAA,cAAA,CAAA,EAGH,CAlBO,CAAA,EAAAA,EAAK,MAmBd,CACD,EACH,CAAA,CACF,CAAA,CACF,CAAA,EAEC7D,EAAA,IAAA,MAAA,CAAI,UAAU,mBACb,SAACA,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAAwB,0BAAA,CAAA,CACvD,CAAA,EAEJ,CACF,CAAA,CAAA,CAEJ,ECzFMsG,GAAa,IAAM,CACjB,KAAA,CAAE,GAAAX,GAAOC,IACT,CAAC/B,EAAM0C,CAAO,EAAItH,WAAsB,IAAI,EAC5C,CAAC6D,EAASC,CAAU,EAAI9D,WAAS,EAAI,EACrC,CAACY,EAAOoC,CAAQ,EAAIhD,WAAS,EAAE,EAC/B,CAACuH,EAAUC,CAAW,EAAIxH,WAAS,EAAK,EACxC,CAAE,QAAAgE,GAAYJ,IACdX,EAAWC,IAEjB7C,EAAAA,UAAU,IAAM,CAaVqG,IAZc,SAAY,CACxB,GAAA,CACI,MAAA/B,EAAO,MAAMX,EAAc,CAAE,KAAM,UAAU0C,CAAE,GAAI,EACzDY,EAAQ3C,CAAI,QACLvB,EAAK,CACJ,QAAA,MAAM,+BAAgCA,CAAG,EACjDJ,EAAS,6BAA6B,CAAA,QACtC,CACAc,EAAW,EAAK,CAClB,CAAA,IAKF,EACC,CAAC4C,CAAE,CAAC,EAED,MAAAe,EAAmB,MAAOC,GAAsB,CACpD,GAAK9C,EAEL,CAAA4C,EAAY,EAAI,EACZ,GAAA,CACI,MAAAG,EAAc,MAAM3D,EAAc,CACtC,KAAM,UAAU0C,CAAE,UAClB,OAAQ,MACR,KAAM,CAAE,OAAQgB,CAAU,CAAA,CAC3B,EACDJ,EAAQK,CAAW,QACZvE,EAAK,CACJ,QAAA,MAAM,8BAA+BA,CAAG,EAChDJ,EAAS,8BAA8B,CAAA,QACvC,CACAwE,EAAY,EAAK,CACnB,EAAA,EAGF,OAAI3D,EAEA9C,EAAAA,IAAC,OAAI,UAAU,mBACb,eAAC,IAAE,CAAA,UAAU,gBAAgB,SAAA,yBAAuB,CAAA,CACtD,CAAA,EAIAH,EAECG,EAAAA,IAAA,MAAA,CAAI,UAAU,iEACZ,SACHH,CAAA,CAAA,EAICgE,SAYF,MACC,CAAA,SAAA,CAAC/C,EAAAA,KAAA,MAAA,CAAI,UAAU,yCACb,SAAA,CAAAd,EAAA,IAAC,KAAG,CAAA,UAAU,qBAAsB,SAAA6D,EAAK,MAAM,EAC/C7D,EAAAA,IAACmB,GAAO,QAAS,IAAMe,EAAS,QAAQ,EAAG,QAAQ,YAAY,SAE/D,eAAA,CAAA,CAAA,EACF,EAEClC,MAAAsC,EAAA,CACC,SAACxB,EAAAA,KAAA,MAAA,CAAI,UAAU,YACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACd,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAY,eAAA,EAC9Dc,EAAAA,KAAC,MAAI,CAAA,UAAU,uDACb,SAAA,CAAAA,OAAC,MACC,CAAA,SAAA,CAACd,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAM,SAAA,QACvD,KAAG,CAAA,UAAU,OACZ,SAAAA,MAAC,QAAK,UAAW;AAAA,sBACb6D,EAAK,SAAW,YAAc,8BAC9BA,EAAK,SAAW,cAAgB,4BAChC,+BAA+B,GAChC,SAAKA,EAAA,MACR,CAAA,EACF,CAAA,EACF,SACC,MACC,CAAA,SAAA,CAAC7D,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAQ,WAAA,EACzDA,EAAA,IAAA,KAAA,CAAG,UAAU,6BAA8B,WAAK,SAAS,CAAA,EAC5D,EACC6D,EAAK,SACJ/C,EAAAA,KAAC,MACC,CAAA,SAAA,CAACd,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAQ,WAAA,EAC1DA,EAAAA,IAAC,KAAG,CAAA,UAAU,6BACX,SAAA,IAAI,KAAK6D,EAAK,OAAO,EAAE,mBAC1B,CAAA,CAAA,CAAA,EACF,SAED,MACC,CAAA,SAAA,CAAC7D,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAO,UAAA,EACzDA,EAAAA,IAAC,KAAG,CAAA,UAAU,6BACX,SAAA,IAAI,KAAK6D,EAAK,SAAS,EAAE,mBAC5B,CAAA,CAAA,CAAA,EACF,CAAA,EACF,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAAC7D,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAW,cAAA,QAC5D,MAAI,CAAA,UAAU,oCACZ,SAAA6D,EAAK,aAAe,0BACvB,CAAA,EACF,SAEC,MACC,CAAA,SAAA,CAAC7D,EAAA,IAAA,KAAA,CAAG,UAAU,oCAAoC,SAAO,UAAA,EACzDc,EAAAA,KAAC,MAAI,CAAA,UAAU,sBACZ,SAAA,CAAA+C,EAAK,SAAW,WACf7D,EAAA,IAACmB,EAAA,CACC,QAAS,IAAMuF,EAAiB,aAAa,EAC7C,UAAWF,EACX,SAAUA,EACX,SAAA,YAAA,CAED,EAGD3C,EAAK,SAAW,eACf7D,EAAA,IAACmB,EAAA,CACC,QAAS,IAAMuF,EAAiB,WAAW,EAC3C,UAAWF,EACX,SAAUA,EACX,SAAA,eAAA,CAED,CAAA,EAEJ,CAAA,EACF,CAAA,CAAA,CACF,CACF,CAAA,CACF,CAAA,CAAA,EAxFE1F,EAAA,KAAC,MAAI,CAAA,UAAU,mBACb,SAAA,CAACd,EAAA,IAAA,IAAA,CAAE,UAAU,gBAAgB,SAAc,iBAAA,EAC3CA,EAAAA,IAACmB,GAAO,QAAS,IAAMe,EAAS,QAAQ,EAAG,UAAU,OAAO,SAE5D,eAAA,CAAA,CACF,CAAA,CAAA,CAqFN,ECrJM2E,GAAW,IACd/F,EAAAA,KAAA,MAAA,CAAI,UAAU,oEACb,SAAA,CAACd,EAAA,IAAA,KAAA,CAAG,UAAU,wCAAwC,SAAG,MAAA,EACxDA,EAAA,IAAA,IAAA,CAAE,UAAU,6BAA6B,SAAc,iBAAA,QACvD,IAAE,CAAA,KAAK,IAAI,UAAU,6DAA6D,SAEnF,sBAAA,CAAA,CACF,CAAA,EAGF,SAAS8G,IAAM,CACb,OACG9G,MAAAnB,GAAA,CACC,SAACmB,EAAA,IAAA+G,EAAA,CACC,gBAACC,EACC,CAAA,SAAA,CAAAhH,MAACiH,GAAM,KAAK,SAAS,QAASjH,MAAC8B,IAAM,CAAA,EAAI,EAGzChB,EAAAA,KAACmG,GAAM,QAASjH,EAAAA,IAACI,IAAe,SAACJ,EAAAA,IAAAkB,GAAA,CAAA,CAAO,CAAE,CAAA,EACxC,SAAA,CAAAlB,MAACiH,GAAM,KAAK,WAAW,QAASjH,MAACwC,IAAQ,CAAA,EAAI,EAG5C1B,EAAA,KAAAmG,EAAA,CAAM,QAASjH,EAAA,IAACM,KAAW,EAC1B,SAAA,CAAAN,MAACiH,GAAM,KAAK,IAAI,QAASjH,MAAC2C,IAAU,CAAA,EAAI,QACvCsE,EAAM,CAAA,KAAK,eAAe,QAASjH,MAACyD,IAAM,CAAA,EAAI,QAC9CwD,EAAM,CAAA,KAAK,eAAe,QAASjH,MAAC8D,IAAM,CAAA,EAAI,QAC9CmD,EAAM,CAAA,KAAK,sBAAsB,QAASjH,MAACiE,IAAW,CAAA,EAAI,QAC1DgD,EAAM,CAAA,KAAK,sBAAsB,QAASjH,MAAC8E,IAAW,CAAA,EAAI,QAC1DmC,EAAM,CAAA,KAAK,mBAAmB,QAASjH,MAAC0F,IAAY,CAAA,EAAI,QACxDuB,EAAM,CAAA,KAAK,wCAAwC,QAASjH,MAAC8F,IAAc,CAAA,EAAI,CAAA,EAClF,EAGChF,EAAA,KAAAmG,EAAA,CAAM,QAASjH,EAAA,IAACY,KAAU,EACzB,SAAA,CAAAZ,MAACiH,GAAM,KAAK,aAAa,QAASjH,MAACkG,IAAc,CAAA,EAAI,QACpDe,EAAM,CAAA,KAAK,SAAS,QAASjH,MAACqG,IAAU,CAAA,EAAI,QAC5CY,EAAM,CAAA,KAAK,aAAa,QAASjH,MAACsG,IAAW,CAAA,EAAI,CAAA,EACpD,CAAA,EACF,QAECW,EAAM,CAAA,KAAK,IAAI,QAASjH,MAAC6G,IAAS,CAAA,EAAI,CAAA,EACzC,EACF,CACF,CAAA,CAEJ,CC5DAK,EAAQ,UAAU,CAChB,KAAM,CACJ,OAAQ,YACR,WAAY,sBACZ,oBAAqB,4BACrB,gBAAiB,EACnB,EACA,IAAK,CACH,UAAW,CACT,CACE,KAAM,eACN,SAAU,yDACV,OAAQ,WACV,CACF,CACF,CACF,CAAC,EAEDC,EAAS,WAAW,SAAS,eAAe,MAAM,CAAE,EAAE,aACnDC,EAAM,WAAN,CACC,SAAApH,EAAAA,IAAC8G,IAAI,CAAA,EACP,CACF","x_google_ignoreList":[0,1,2]}